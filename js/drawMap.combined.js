document.addEventListener('DOMContentLoaded', function(e){

var map = [
    {"name":"Alabama", "abr":"AL", "txt": {"x":438.036, "y":238.324}, },
    {"name":"Alaska", "abr":"AK", "txt": {"x":48.614, "y":162.502}, },
    {"name":"Arizona", "abr":"AZ", "txt": {"x":218.385, "y":213.684}, },
    {"name":"Arkansas", "abr":"AR", "txt": {"x":383.813, "y":217.098}, },
    {"name":"California", "abr":"CA", "txt": {"x":157.229, "y":176.523}, },
    {"name":"Colorado", "abr":"CO", "txt": {"x":276.542, "y":172.219}, },
    {"name":"Connecticut", "abr":"CT", "txt": {"x":611.941, "y":147.663}, "box":{"x":604.145, "y":146.378, "n":6} },
    {"name":"Delaware", "abr":"DE", "txt": {"x":626.523, "y":177.301}, "box": {"x":619.979, "y":176.584, "n":7} },
    {"name":"Florida", "abr":"FL", "txt": {"x":494, "y":290.199} },
    {"name":"Georgia", "abr":"GA", "txt":{"x":468.44, "y":239.283} },
    {"name":"Hawaii", "abr":"HI", "txt":{"x":64.725, "y":265.901}, "box":{"x":55.145, "y":266.083, "n":10} },
    {"name":"Idaho", "abr":"ID", "txt":{"x":214.083, "y":112.029} },
    {"name":"Illinois", "abr":"IL", "txt":{"x":410.433, "y":161.854} },
    {"name":"Indiana", "abr":"IN", "txt":{"x":433.569, "y":161.54} },
    {"name":"Iowa", "abr":"IA", "txt":{"x":375.985, "y":144.134} },
    {"name":"Kansas", "abr":"KS", "txt":{"x":330.964, "y":180.57} },
    {"name":"Kentucky", "abr":"KY", "txt":{"x":445.926, "y":183.871} },
    {"name":"Louisiana", "abr":"LA", "txt":{"x":383.56, "y":252.824} },
    {"name":"Maine", "abr":"ME", "txt":{"x":549.65, "y":79.555} },
    {"name":"Maryland", "abr":"MD", "txt":{"x":616.195, "y":204.806}, "box":{"x":611.063, "y":204.418, "n":19} },
    {"name":"Massachusetts", "abr":"MA", "txt":{"x":482.906, "y":92.244}, "box":{"x":477.062, "y":90.667, "n":20} },
    {"name":"Michigan", "abr":"MI", "txt":{"x":443.251, "y":126.597} },
    {"name":"Minnesota", "abr":"MN", "txt":{"x":363.0, "y":104.6}},
    {"name":"Mississippi", "abr":"MS", "txt":{"x":407.9, "y":239.4} },
    {"name":"Missouri", "abr":"MO", "txt":{"x":381.5, "y":185.3} },
    {"name":"Montana", "abr":"MT", "txt":{"x":255.3, "y":80.4} },
    {"name":"Nebraska", "abr":"NE", "txt":{"x":324.9, "y":145.7} },
    {"name":"Nevada", "abr":"NV", "txt":{"x":188.2, "y":155.3}},
    {"name":"New Hampshire", "abr":"NH", "txt":{"x":512.0, "y":48.5}, "box":{"x":506.264, "y":47.083, "n":28} },
    {"name":"New Jersey", "abr":"NJ", "txt":{"x":564.1, "y":153}, "box":{"x":555.979, "y":152.125, "n":29} },
    {"name":"New Mexico", "abr":"NM", "txt":{"x":260.8, "y":220.2} },
    {"name":"New York", "abr":"NY", "txt":{"x":514.7, "y":114.3} },
    {"name":"North Carolina", "abr":"NC", "txt":{"x":500.3, "y":198.3} },
    {"name":"North Dakota", "abr":"ND", "txt":{"x":322.2, "y":83.7} },
    {"name":"Ohio", "abr":"OH", "txt":{"x":457.1, "y":155.9} },
    {"name":"Oklahoma", "abr":"OK", "txt":{"x":341.6, "y":210.9} },
    {"name":"Oregon", "abr":"OR", "txt":{"x":165.7, "y":97.1} },
    {"name":"Pennsylvania", "abr":"PA", "txt":{"x":497.6, "y":140.8} },
    {"name":"Rhode Island", "abr":"RI", "txt":{"x":578.3, "y":126.0}, "box":{"x":568.062, "y":124.75, "n":38} },
    {"name":"South Carolina", "abr":"SC", "txt":{"x":486.5, "y":217.2} },
    {"name":"South Dakota", "abr":"SD", "txt":{"x":322.0, "y":115.4} },
    {"name":"Tennessee", "abr":"TN", "txt":{"x":435.0, "y":203.0} },
    {"name":"Texas", "abr":"TX", "txt":{"x":329.2, "y":254.4} },
    {"name":"Utah", "abr":"UT", "txt":{"x":227.7, "y":161.5} },
    {"name":"Vermont", "abr":"VT", "txt":{"x":462.658, "y":56.81}, "box":{"x":456.312, "y":54.792, "n":44} },
    {"name":"Virginia", "abr":"VA", "txt":{"x":500.6, "y":175.2} },
    {"name":"Washington", "abr":"WA", "txt":{"x":177.3, "y":63.8} },
    {"name":"West Virginia", "abr":"WV", "txt":{"x":549.4, "y":223.9}, "box":{"x":542.312, "y":223.584, "n":47} },
    {"name":"Wisconsin", "abr":"WI", "txt":{"x":400.2, "y":111.0} },
    {"name":"Wyoming", "abr":"WY", "txt":{"x":264.0, "y":126.8} },
    {"name":"Mexico", "abr":"BJ", "txt":{}, "type":"country" } 
];

var id = "canvas-map-draw",
    url = 'http://www.americasbestvalueinn.com/reservations.cfm?submitted=1&State=',
    urlCountry = 'http://www.americasbestvalueinn.com/reservations.cfm?submitted=1&Country=',
    fColor = "#9BBFDD",
    s = new createjs.Graphics(),
    w = "white";
    defText = "We've Got You Covered",
    f = false, t = true, containers = [], stateShapes = [];

var qs = function(sel) {
    return document.querySelector(sel);
};

var imTest = qs('#' + id).getAttribute('data-image');
var imgDir = (imTest) ? imTest : "images/";
console.log(imgDir);

var stage = new createjs.Stage(id);
var shading = "url(" + imgDir + "mapShading.gif)";
var ua = navigator.userAgent;

stage.enableMouseOver();
createjs.Touch.enable(stage);

var checker = {
    iphone: (ua.match(/(iPhone|iPod|iPad)/)) ? true : false,
    android: (ua.match(/Android/)) ? true : false
};

var ev = (checker.iphone || checker.android) ? "touchstart" : "click";



// add listener shortcut
function listener(el, event, fn, bubble) {
    var b = (bubble) ? true : false;
    el.addEventListener(event, fn, b);
}

//set cursor for entire body to emulate roll over
function setCursor(arg) {

    qs('body').style.cursor = arg;

}

// set blue label to selected state
function setLabel(state) {

    qs('.status-current-state').innerHTML = state;

}

var canvas = qs("#" + id);

setLabel(defText);

var bg = new Image();

bg.src = imgDir + "mapShading.gif";

listener(bg, "load", function() {
  

   // canvas.style.display = "none";
   canvas.style.backgroundImage = shading;

});


//load Canada bitmap and setup rollover
var canImage = new Image();
canImage.src = imgDir + 'canadaTrans.png';

// add load event listener
listener(canImage, 'load', function() {

    var canadaContainer = new createjs.Container();
    var can = new createjs.Bitmap(imgDir + 'canada-trans.png');
    canadaContainer.addChild(can);
    stage.addChild(canadaContainer);
    can.x = 588;
    can.y = 8;
    can.name = "Canada";
    canadaContainer.alpha = 1;

    setTimeout(function() {
        
        // canvas.style.display = "block";
        stage.update();
        qs('.canvas-container-div').style.background = "none";

    }, 400);

    listener(canadaContainer, 'mouseover', function() {

        setLabel('Canada');
        setCursor('pointer');
        // console.log(canadaContainer);
        canadaContainer.alpha = 0.01;
        stage.update();

    });

    listener(canadaContainer, 'mouseout', function() {

        setLabel(defText);
        setCursor('default');
        canadaContainer.alpha = 1;
        stage.update();

    });

    listener(canadaContainer, "click", function() {

        setLabel(defText);
        setCursor('default');

        canadaContainer.alpha = 1;


        if (ev == 'touchstart') {

            var conf = confirm("Find hotels in Canada?");

            if (conf) {

                window.open('http://www.canadasbestvalueinn.com/reservations.cfm');

            }

        } else {

            canadaContainer.alpha = 1;
            window.open('http://www.canadasbestvalueinn.com/reservations.cfm');

        }

    });

    var color = 'black';
    var text = new createjs.Text("Canada", "Arial 10pt", color);
    text.x = 585.661;
    text.y = 32.195;
    stage.addChild(text);
    stage.update();
    // console.log(stage);

    function addShape(arg, ob) {
        //arg is an instance of s (variable);
        var shape = new createjs.Shape(arg);
        shape.name = ob.name;
        shape.abr = ob.abr;
        var container = new createjs.Container();
        container.addChild(shape);
        container.name = ob.name;
        container.abr = ob.abr;

        //create shape object 
        stateShapes.push(shape);
        containers.push(shape);

        stage.addChild(container);

        listener(container, 'click', function(e) {

            // console.log(this.name, " ", this.abr); 
            shape.alpha = 1;
            setLabel(defText);
            var link = (!ob.type) ? url : urlCountry;
            console.log(link + container.abr);

            if (ev == 'touchstart') {

                var conf = confirm("Find hotels in " + container.name + "?");

                if (conf) {

                    window.open(link + container.abr);

                }

            } else {

                shape.alpha = 1;
                stage.update();

                window.open(link + container.abr);

            }

        });

        listener(container, 'mouseover', function() {

            shape.alpha = 0.01;
            stage.update();
            setLabel(container.name);
            setCursor('pointer');

        });

        listener(container, 'mouseout', function() {

            shape.alpha = 1;
            stage.update();
            setLabel(defText);
            setCursor('default');

        });

        if (!ob.box) {

            var color = w;
            var text = new createjs.Text(ob.abr, "Arial 10pt", color);
            text.x = ob.txt.x;
            text.y = ob.txt.y;
            stage.addChild(text);
            stage.update();

        }

        s = new createjs.Graphics();

    }

    s.f(fColor).mt(429.4, 269.7).lt(428.6, 262.3).lt(427.3, 253.2).lt(427.4, 246.4).lt(427.8, 231.3).lt(427.7, 223.2).lt(427.8, 220.1).lt(431.5, 219.9).lt(445.0, 218.7).lt(449.9, 218.3).lt(449.8, 219.3).lt(449.9, 220.3).lt(450.2, 222.0).lt(451.9, 225.8).lt(453.0, 230.6).lt(453.7, 233.6).lt(454.5, 236.0).lt(455.2, 239.3).lt(456.2, 242.4).lt(457.5, 244.0).lt(457.7, 245.7).lt(458.7, 246.1).lt(458.7, 247.1).lt(457.9, 249.5).lt(457.6, 251.0).lt(457.6, 252.0).lt(458.3, 254.1).lt(458.5, 256.7).lt(458.1, 257.9).lt(458.4, 258.3).lt(459.1, 258.7).lt(459.5, 260.4).lt(456.5, 260.4).lt(453.2, 260.7).lt(440.8, 262.1).lt(435.9, 262.7).lt(435.8, 264.2).lt(436.6, 265.1).lt(437.9, 266.0).lt(438.1, 269.9).lt(435.0, 271.1).lt(433.6, 271.0).lt(435.0, 270.0).lt(435.0, 269.6).lt(433.5, 266.7).lt(432.4, 266.3).lt(431.7, 268.5).lt(431.1, 269.8).lt(430.8, 269.7).lt(429.4, 269.7).lt(429.4, 269.7).ef();
    addShape(s, map[0]);

    //states/AK
    s.f(fColor).s(w).mt(75.5, 148.6).bt(75.5, 159.6, 75.5, 170.7, 75.4, 181.7).bt(75.4, 183.7, 74.0, 190.4, 76.9, 190.6).bt(76.7, 190.6, 78.7, 190.3, 78.4, 190.1).bt(79.0, 190.5, 79.3, 191.3, 79.7, 191.5).bt(81.2, 192.5, 83.0, 194.2, 83.3, 196.1).bt(84.5, 195.6, 88.2, 189.1, 89.2, 193.7).bt(89.4, 194.6, 90.9, 196.2, 91.8, 196.6).bt(93.6, 197.4, 94.6, 200.1, 95.7, 201.8).bt(96.9, 203.6, 97.3, 204.8, 99.3, 205.6).bt(102.0, 206.5, 102.6, 206.8, 103.0, 209.7).bt(104.0, 215.8, 100.0, 210.7, 98.1, 210.0).bt(98.5, 212.1, 99.0, 215.3, 96.0, 212.2).bt(96.4, 213.0, 96.4, 214.0, 96.5, 214.3).bt(95.7, 213.3, 94.7, 212.4, 94.4, 211.1).bt(93.2, 211.3, 93.6, 208.9, 93.4, 206.7).bt(93.4, 207.0, 92.3, 208.2, 92.1, 208.6).bt(91.9, 207.3, 91.5, 205.8, 90.9, 204.8).bt(91.2, 205.8, 91.0, 207.0, 91.1, 208.1).bt(89.4, 206.4, 84.3, 200.4, 86.8, 198.8).bt(84.2, 199.3, 77.3, 194.3, 78.8, 191.5).bt(77.2, 193.3, 70.1, 192.0, 68.5, 191.1).bt(66.2, 189.7, 65.0, 189.6, 63.9, 187.2).bt(63.0, 185.3, 59.3, 187.0, 60.3, 189.5).bt(60.5, 189.1, 60.7, 188.6, 60.9, 188.1).bt(60.9, 188.0, 60.8, 189.8, 60.6, 190.4).bt(61.1, 190.0, 61.7, 189.5, 62.2, 189.1).bt(62.7, 193.0, 59.5, 190.8, 58.5, 191.0).bt(57.2, 191.3, 58.0, 189.6, 56.4, 190.7).bt(56.1, 190.9, 55.1, 192.1, 54.8, 192.2).bt(53.1, 192.7, 51.6, 194.4, 50.7, 192.1).bt(51.3, 192.0, 51.9, 191.9, 52.5, 191.8).bt(52.1, 191.5, 52.3, 191.2, 51.4, 190.9).bt(53.0, 188.1, 53.1, 184.5, 56.9, 186.1).bt(55.1, 182.8, 51.9, 186.2, 50.5, 188.3).bt(49.8, 189.3, 44.8, 192.3, 46.4, 193.0).bt(50.7, 194.8, 34.5, 201.3, 33.0, 202.1).bt(33.2, 202.3, 33.5, 202.5, 33.8, 202.7).bt(32.4, 204.7, 30.4, 202.8, 29.1, 204.7).bt(29.2, 204.3, 29.2, 203.9, 29.3, 203.5).bt(27.4, 204.7, 24.9, 204.6, 23.1, 204.9).bt(21.5, 205.3, 19.7, 206.2, 18.1, 205.5).bt(17.1, 205.1, 15.1, 206.7, 15.1, 205.0).bt(15.1, 203.7, 20.5, 203.8, 21.8, 203.4).bt(28.6, 201.6, 36.6, 200.1, 38.7, 191.7).bt(36.3, 193.8, 35.2, 189.5, 34.8, 193.2).bt(34.1, 192.5, 33.6, 191.9, 33.4, 190.3).bt(32.1, 190.7, 30.3, 190.1, 27.9, 190.2).bt(28.6, 188.6, 28.3, 187.4, 29.8, 186.8).bt(29.8, 185.7, 29.5, 184.2, 29.0, 183.3).bt(25.7, 186.9, 22.6, 180.0, 25.3, 177.4).bt(20.7, 176.8, 29.7, 165.6, 31.3, 170.5).bt(33.2, 169.4, 35.7, 170.5, 37.2, 169.2).bt(37.5, 168.9, 38.3, 164.6, 38.2, 164.5).bt(37.8, 163.8, 35.2, 164.7, 34.2, 164.6).bt(33.4, 164.5, 30.1, 163.7, 29.6, 163.2).bt(27.8, 161.2, 29.3, 160.9, 28.9, 158.8).bt(28.7, 157.9, 25.2, 155.8, 28.0, 155.6).bt(29.7, 155.5, 30.9, 155.3, 32.2, 155.9).bt(32.8, 154.6, 34.6, 154.5, 36.0, 155.5).bt(33.8, 157.9, 37.8, 159.2, 39.7, 158.4).bt(38.7, 157.1, 38.2, 155.6, 38.6, 154.4).bt(36.2, 153.5, 36.1, 149.6, 34.8, 147.4).bt(33.3, 144.6, 35.3, 145.8, 36.9, 144.9).bt(38.2, 144.3, 39.9, 144.6, 41.6, 143.4).bt(42.7, 142.7, 43.8, 141.7, 44.8, 141.2).bt(46.0, 140.7, 48.1, 140.5, 48.9, 140.2).bt(51.6, 139.3, 55.1, 137.8, 55.7, 142.0).bt(58.3, 139.9, 57.6, 142.4, 59.0, 143.5).bt(60.6, 144.7, 63.4, 144.5, 65.5, 145.9).bt(68.2, 147.7, 72.1, 145.9, 75.5, 148.6).lt(75.5, 148.6).f(fColor).s(w).mt(2.0, 207.6).bt(4.1, 205.7, 6.0, 207.2, 6.8, 207.0).bt(7.9, 206.7, 8.8, 205.0, 9.8, 205.2).bt(14.0, 206.0, 8.1, 207.5, 7.2, 207.6).bt(5.7, 207.8, 3.5, 207.7, 2.0, 207.6).lt(2.0, 207.6).f(fColor).s(w).mt(42.7, 199.9).bt(42.1, 205.4, 47.0, 201.8, 49.2, 200.5).bt(49.2, 200.2, 48.8, 198.4, 48.7, 198.1).bt(47.8, 198.3, 47.0, 198.2, 46.2, 198.3).bt(47.7, 198.0, 49.1, 198.0, 50.1, 196.6).bt(49.7, 196.5, 49.3, 196.3, 48.9, 196.2).bt(49.0, 195.9, 49.2, 195.6, 49.3, 195.3).bt(47.1, 196.8, 44.9, 198.3, 42.7, 199.9).lt(42.7, 199.9).ef();
    addShape(s, map[1]);

    //states/AZ
    s.f(fColor).s(w).mt(193.6, 231.2).lt(192.3, 232.3).lt(192.1, 233.0).lt(192.4, 233.4).lt(201.5, 238.6).lt(207.4, 242.3).lt(214.5, 246.5).lt(222.6, 251.3).lt(228.6, 252.5).lt(241.5, 254.2).lt(242.5, 247.8).lt(244.3, 234.7).lt(247.7, 208.8).lt(249.7, 193.9).lt(237.3, 192.0).lt(224.1, 189.8).lt(208.0, 186.7).lt(206.5, 195.5).lt(206.3, 195.7).lt(205.5, 197.0).lt(204.3, 197.0).lt(203.7, 195.6).lt(202.3, 195.5).lt(201.9, 194.9).lt(201.5, 194.9).lt(201.0, 195.2).lt(200.1, 195.7).lt(200.0, 199.1).lt(199.9, 199.9).lt(199.6, 206.0).lt(198.9, 207.1).lt(198.6, 208.7).lt(200.0, 211.1).lt(200.6, 213.9).lt(201.0, 214.4).lt(201.5, 214.7).lt(201.4, 215.8).lt(200.6, 216.4).lt(199.0, 217.3).lt(198.0, 218.2).lt(197.3, 220.0).lt(197.0, 222.4).lt(195.7, 223.7).lt(194.7, 224.1).lt(194.6, 226.9).lt(194.4, 227.7).lt(194.6, 228.1).lt(196.4, 228.4).lt(196.1, 229.7).lt(195.4, 230.8).lt(193.6, 231.2).ef();
    addShape(s, map[2]);

    //state/AR
    s.f(fColor).s(w).mt(413.2, 210.6).lt(410.8, 211.0).lt(407.8, 210.8).lt(408.2, 209.3).lt(409.7, 208.0).lt(409.9, 206.9).lt(409.0, 205.5).lt(403.7, 205.7).lt(393.7, 206.1).lt(382.4, 206.5).lt(371.1, 206.7).lt(371.9, 210.0).lt(371.9, 214.0).lt(372.6, 219.3).lt(372.7, 237.7).lt(373.8, 238.7).lt(375.2, 238.0).lt(376.5, 238.5).lt(376.9, 244.0).lt(387.6, 244.0).lt(396.9, 243.5).lt(402.1, 243.6).lt(402.8, 242.3).lt(402.6, 240.2).lt(402.0, 238.8).lt(402.6, 238.1).lt(402.0, 237.1).lt(402.2, 236.2).lt(402.6, 233.2).lt(404.1, 231.9).lt(403.7, 230.9).lt(405.5, 228.3).lt(406.8, 227.9).lt(406.8, 226.7).lt(406.5, 226.0).lt(407.8, 223.4).lt(409.2, 222.9).lt(409.0, 221.1).lt(410.2, 220.6).lt(410.7, 218.3).lt(410.0, 216.6).lt(411.9, 215.5).lt(412.1, 214.2).lt(412.7, 212.1).lt(413.2, 210.6).ef();
    addShape(s, map[3]);

    // state/CA
    s.f(fColor).s(w).mt(193.4, 231.2).bt(195.4, 230.8, 195.9, 230.5, 196.4, 228.4).bt(194.4, 228.1, 194.6, 228.2, 194.6, 226.4).bt(194.6, 225.9, 194.4, 224.5, 194.7, 224.1).bt(194.8, 223.9, 196.4, 223.0, 196.7, 222.7).bt(197.5, 221.9, 197.2, 220.2, 197.7, 219.1).bt(198.4, 217.4, 199.6, 217.4, 200.8, 216.3).bt(202.2, 215.1, 200.7, 214.4, 200.4, 213.0).bt(200.1, 211.5, 198.9, 210.1, 198.6, 208.7).bt(198.6, 208.2, 199.2, 207.4, 198.8, 207.0).bt(198.5, 206.5, 198.0, 206.0, 197.7, 205.5).bt(196.9, 204.3, 196.1, 203.0, 195.3, 201.8).bt(188.5, 190.9, 181.3, 180.3, 174.1, 169.6).bt(170.8, 164.7, 167.6, 159.8, 164.3, 154.9).bt(163.8, 154.1, 166.2, 147.6, 166.4, 146.7).bt(167.2, 144.0, 167.9, 141.3, 168.6, 138.5).bt(169.6, 134.7, 170.6, 131.0, 171.5, 127.2).bt(171.8, 126.1, 172.1, 125.0, 172.4, 123.9).bt(172.4, 123.8, 168.2, 122.7, 167.9, 122.6).bt(162.3, 121.1, 156.8, 119.3, 151.2, 117.8).bt(147.7, 116.8, 144.2, 116.0, 140.7, 114.8).bt(140.2, 116.3, 139.9, 117.3, 139.9, 118.9).bt(139.8, 120.7, 139.4, 121.6, 138.7, 123.3).bt(138.1, 124.7, 137.8, 126.1, 136.6, 127.0).bt(135.4, 128.1, 134.7, 128.9, 134.2, 130.5).bt(133.6, 132.3, 134.0, 132.6, 135.0, 134.2).bt(135.5, 134.9, 136.4, 137.2, 136.4, 138.1).bt(136.3, 139.9, 136.3, 141.0, 135.5, 142.5).bt(134.9, 143.6, 135.0, 145.8, 134.7, 147.1).bt(134.4, 148.0, 136.1, 150.2, 136.5, 150.9).bt(137.3, 152.3, 137.9, 153.7, 138.4, 155.2).bt(138.7, 156.3, 137.9, 157.5, 138.2, 158.5).bt(138.5, 159.5, 141.1, 160.7, 140.9, 161.8).bt(140.3, 164.7, 139.4, 167.4, 140.9, 170.2).bt(141.2, 170.7, 141.6, 171.2, 142.0, 171.8).bt(142.4, 172.2, 143.3, 171.8, 143.5, 172.3).bt(143.9, 173.5, 143.9, 176.0, 142.1, 176.0).bt(141.3, 176.0, 141.3, 178.8, 141.7, 179.4).bt(142.8, 180.8, 143.3, 181.8, 143.9, 183.6).bt(144.7, 186.4, 145.9, 188.6, 147.3, 191.2).bt(147.7, 191.9, 147.6, 192.5, 147.9, 193.2).bt(148.2, 194.1, 148.7, 193.5, 148.7, 194.7).bt(148.7, 196.0, 147.8, 197.9, 147.5, 199.2).bt(146.8, 202.0, 151.6, 202.1, 153.5, 203.2).bt(154.4, 203.6, 154.7, 203.7, 155.6, 203.7).bt(156.2, 203.7, 156.8, 204.7, 157.2, 205.1).bt(158.1, 206.0, 158.2, 207.7, 159.1, 208.6).bt(160.1, 209.7, 161.8, 209.8, 163.2, 210.0).bt(163.5, 210.1, 164.0, 210.9, 164.0, 211.2).bt(164.1, 211.6, 164.2, 212.1, 164.3, 212.5).bt(164.3, 212.8, 163.6, 212.9, 163.6, 212.9).bt(164.2, 214.2, 166.2, 213.2, 166.7, 214.0).bt(167.6, 215.5, 168.5, 216.6, 169.6, 217.9).bt(171.6, 220.0, 171.7, 222.8, 171.7, 225.5).bt(171.7, 226.4, 171.7, 227.2, 171.9, 228.1).bt(172.1, 228.7, 174.4, 228.7, 174.9, 228.8).bt(176.8, 229.0, 178.6, 229.3, 180.5, 229.6).bt(184.8, 230.2, 189.1, 230.7, 193.4, 231.2).lt(193.4, 231.2).ef().es();
    addShape(s, map[4]);

    // state/CO
    s.f(fColor).s(w).mt(308.6, 199.8).lt(310.6, 167.8).lt(311.3, 156.9).lt(295.2, 155.6).lt(283.4, 154.6).lt(265.4, 152.6).lt(255.3, 151.4).lt(254.1, 162.1).lt(252.5, 173.0).lt(250.7, 186.6).lt(250.0, 192.0).lt(249.7, 193.9).lt(266.3, 195.9).lt(284.2, 198.1).lt(300.0, 199.1).lt(303.3, 199.5).lt(308.8, 199.7).ef().es();
    addShape(s, map[5]);

    // states/CT
    s.f(fColor).s(w).mt(549.8, 130.3).lt(549.3, 128.3).lt(548.9, 126.2).lt(548.1, 123.3).lt(545.6, 123.8).lt(535.1, 126.1).lt(535.4, 127.7).lt(536.1, 131.3).lt(536.1, 135.2).lt(535.6, 136.3).lt(536.4, 137.3).lt(538.8, 135.7).lt(540.6, 134.1).lt(541.5, 133.1).lt(541.9, 133.4).lt(543.2, 132.7).lt(545.7, 132.1).lt(549.8, 130.3).ef().es();
    addShape(s, map[6]);

    // states/DE
    s.f(fColor).s(w).mt(524.7, 154.9).lt(525.1, 153.9).lt(525.2, 153.3).lt(524.2, 153.3).lt(523.2, 154.1).lt(522.5, 154.8).lt(523.2, 156.8).lt(524.3, 159.6).lt(525.3, 164.3).lt(526.1, 167.3).lt(528.5, 167.2).lt(531.5, 166.7).lt(530.4, 163.1).lt(529.9, 163.3).lt(528.2, 162.1).lt(527.4, 159.9).lt(526.4, 158.1).lt(525.3, 157.7).lt(524.3, 155.9).lt(524.7, 154.9).ef().es();
    addShape(s, map[7]);

    // states/FL
    s.f(fColor).s(w).mt(492.3, 259.0).bt(494.2, 266.5, 497.4, 273.9, 503.2, 279.3).bt(505.3, 281.2, 503.1, 284.1, 505.7, 286.8).bt(507.7, 288.8, 511.2, 294.6, 511.7, 297.5).bt(512.2, 300.8, 513.0, 304.8, 512.7, 308.1).bt(512.6, 309.1, 511.3, 314.2, 510.3, 315.1).bt(509.2, 316.3, 505.2, 317.2, 503.9, 316.4).bt(502.4, 315.5, 502.3, 306.7, 497.7, 310.2).bt(496.0, 308.5, 496.3, 305.5, 494.3, 304.2).bt(493.3, 303.6, 493.2, 305.7, 492.2, 304.7).bt(491.4, 304.0, 490.9, 301.9, 490.1, 300.9).bt(489.3, 299.8, 485.3, 294.6, 485.9, 293.9).bt(487.7, 291.8, 489.2, 288.6, 484.9, 289.7).bt(486.5, 290.5, 486.6, 291.6, 485.2, 293.0).bt(482.9, 288.3, 485.7, 284.8, 484.3, 280.4).bt(482.9, 276.2, 477.3, 277.0, 476.0, 273.3).bt(474.6, 269.1, 469.1, 268.6, 466.5, 270.1).bt(467.1, 269.8, 464.9, 271.4, 464.8, 271.5).bt(462.7, 273.5, 460.9, 273.6, 458.3, 274.4).bt(458.3, 271.6, 452.9, 269.3, 450.7, 268.8).bt(445.9, 267.7, 442.6, 269.2, 438.0, 269.9).bt(439.0, 264.1, 432.0, 263.1, 441.1, 262.1).bt(446.1, 261.5, 454.4, 259.0, 459.4, 260.3).bt(461.9, 260.9, 460.8, 262.9, 464.6, 263.0).bt(466.9, 263.0, 469.2, 262.7, 471.5, 262.6).bt(476.2, 262.3, 484.5, 260.3, 487.0, 263.5).bt(487.3, 262.2, 486.1, 259.6, 486.7, 258.8).bt(487.2, 258.0, 491.1, 258.9, 492.3, 259.0).lt(492.3, 259.0).ef().es();
    addShape(s, map[8]);

    // states/GA
    s.f(fColor).s(w).mt(460.4, 216.9).lt(458.0, 217.3).lt(454.0, 217.8).lt(449.8, 218.3).lt(449.8, 219.3).lt(449.9, 220.3).lt(450.2, 222.0).lt(451.9, 225.8).lt(453.0, 230.6).lt(453.7, 233.6).lt(454.5, 236.0).lt(455.2, 239.3).lt(456.2, 242.4).lt(457.5, 244.0).lt(457.7, 245.7).lt(458.7, 246.1).lt(458.7, 247.1).lt(457.9, 249.5).lt(457.6, 251.0).lt(457.6, 252.0).lt(458.3, 254.1).lt(458.5, 256.7).lt(458.1, 257.9).lt(458.4, 258.3).lt(459.1, 258.7).lt(459.4, 260.3).lt(460.7, 262.2).lt(461.4, 262.9).lt(465.2, 263.0).lt(470.4, 262.7).lt(480.8, 262.0).lt(483.5, 261.7).lt(485.7, 261.7).lt(485.8, 263.1).lt(487.0, 263.5).lt(487.2, 261.4).lt(486.4, 259.2).lt(486.9, 258.4).lt(489.8, 258.8).lt(492.2, 259.0).lt(491.8, 255.9).lt(492.9, 251.0).lt(493.6, 249.0).lt(493.4, 247.7).lt(495.3, 244.4).lt(495.0, 243.6).lt(494.1, 244.0).lt(492.9, 243.4).lt(492.6, 242.4).lt(491.9, 240.7).lt(490.9, 239.6).lt(489.6, 239.3).lt(488.8, 237.0).lt(487.5, 234.1).lt(485.5, 233.1).lt(484.4, 232.2).lt(483.8, 230.9).lt(482.8, 230.0).lt(481.7, 229.4).lt(480.6, 227.9).lt(479.1, 226.8).lt(476.9, 226.0).lt(476.7, 225.3).lt(475.5, 223.9).lt(475.3, 223.2).lt(473.7, 220.6).lt(472.0, 220.7).lt(470.1, 219.5).lt(469.4, 218.9).lt(469.3, 218.1).lt(469.7, 217.1).lt(470.8, 216.6).lt(470.7, 215.5).lt(469.8, 215.8).lt(467.0, 216.2).lt(463.7, 216.6).lt(460.4, 216.9).es().ef();
    addShape(s, map[9]);

    // state/HI
    s.f(fColor).s(w).mt(50.3, 250.2).lt(51.2, 248.5).lt(52.3, 248.3).lt(52.5, 248.7).lt(51.5, 250.2).lt(50.3, 250.2).lt(50.3, 250.2).ef().es();

    s.f(fColor).s(w).mt(55.2, 248.4).lt(58.2, 249.7).lt(59.2, 249.5).lt(60.0, 247.6).lt(59.7, 246.0).lt(57.7, 245.7).lt(55.7, 246.6).lt(55.2, 248.4).ef().es();


    s.f(fColor).s(w).mt(70.1, 253.3).lt(71.9, 256.0).lt(73.1, 255.8).lt(73.6, 255.6).lt(74.3, 256.2).lt(76.1, 256.1).lt(76.6, 255.4).lt(75.2, 254.5).lt(74.2, 252.7).lt(73.2, 251.0).lt(70.4, 252.4).lt(70.1, 253.3).ef().es();


    s.f(fColor).s(w).mt(79.9, 257.6).lt(80.5, 256.7).lt(82.7, 257.1).lt(83.1, 256.9).lt(86.0, 257.2).lt(85.9, 257.8).lt(84.6, 258.5).lt(82.5, 258.4).lt(79.9, 257.6).ef().es();


    s.f(fColor).s(w).mt(82.4, 260.1).lt(83.4, 262.0).lt(84.9, 261.5).lt(85.0, 260.7).lt(84.2, 259.6).lt(82.4, 259.5).lt(82.4, 260.1).ef().es();


    s.f(fColor).s(w).mt(85.8, 259.6).lt(86.9, 258.2).lt(89.2, 259.3).lt(91.3, 259.9).lt(93.4, 261.2).lt(93.4, 262.2).lt(91.7, 263.0).lt(89.3, 263.5).lt(88.1, 262.8).lt(85.8, 259.6).ef().es();

    s.f(fColor).s(w).mt(93.8, 267.1).lt(94.6, 266.5).lt(96.3, 267.3).lt(99.9, 269.0).lt(101.6, 270.0).lt(102.4, 271.2).lt(103.3, 273.3).lt(105.3, 274.6).lt(105.1, 275.2).lt(103.2, 276.8).lt(101.2, 277.5).lt(100.5, 277.2).lt(99.0, 278.0).lt(97.8, 279.6).lt(96.7, 281.0).lt(95.9, 280.9).lt(94.2, 279.7).lt(94.0, 277.5).lt(94.3, 276.3).lt(93.5, 273.5).lt(92.5, 272.7).lt(92.4, 271.4).lt(93.5, 271.0).lt(94.5, 269.5).lt(94.8, 269.0).lt(94.0, 268.1).lt(93.8, 267.1).ef().es();
    addShape(s, map[10]);

    // states/ID
    s.f(fColor).s(w).mt(195.0, 129.2).lt(197.3, 120.3).lt(199.4, 111.7).lt(200.0, 109.6).lt(201.2, 106.7).lt(200.6, 105.6).lt(199.4, 105.7).lt(199.0, 105.2).lt(199.3, 104.6).lt(199.4, 103.1).lt(201.6, 100.5).lt(202.5, 100.2).lt(203.0, 99.7).lt(203.3, 98.1).lt(203.7, 97.8).lt(205.6, 95.0).lt(207.5, 92.8).lt(207.6, 91.0).lt(205.9, 89.7).lt(205.3, 87.6).lt(205.5, 82.9).lt(207.3, 74.9).lt(209.4, 64.8).lt(211.2, 58.3).lt(211.6, 56.4).lt(218.4, 57.7).lt(216.3, 68.1).lt(217.9, 71.7).lt(217.3, 74.0).lt(218.2, 76.2).lt(219.7, 76.9).lt(221.5, 81.9).lt(223.2, 83.6).lt(223.5, 84.2).lt(225.1, 84.7).lt(225.3, 85.7).lt(221.9, 94.3).lt(221.9, 95.5).lt(223.1, 97.1).lt(223.6, 97.1).lt(225.9, 95.6).lt(226.2, 95.1).lt(227.0, 95.4).lt(226.9, 98.0).lt(228.2, 104.1).lt(229.6, 105.3).lt(230.1, 105.6).lt(231.0, 106.7).lt(230.8, 108.4).lt(231.1, 110.1).lt(231.6, 110.5).lt(232.7, 109.4).lt(234.1, 109.4).lt(235.6, 110.2).lt(236.8, 109.7).lt(238.8, 109.7).lt(240.6, 110.5).lt(241.9, 110.3).lt(242.1, 108.8).lt(243.6, 108.5).lt(244.2, 109.2).lt(244.5, 110.7).lt(245.7, 111.7).lt(243.9, 123.6).lt(241.4, 138.3).lt(239.1, 137.9).lt(235.1, 137.3).lt(230.1, 136.4).lt(224.3, 135.4).lt(218.2, 134.2).lt(214.3, 133.3).lt(209.8, 132.4).lt(205.1, 131.4).lt(195.0, 129.2).ef().es();
    addShape(s, map[11]);

    // state/IL
    s.f(fColor).s(w).mt(426.0, 189.5).lt(426.0, 187.7).lt(426.2, 185.5).lt(427.3, 184.1).lt(428.2, 182.2).lt(429.4, 180.2).lt(429.2, 177.4).lt(428.3, 176.0).lt(428.2, 174.5).lt(428.6, 171.8).lt(428.3, 168.4).lt(427.7, 160.6).lt(427.1, 153.2).lt(426.7, 147.5).lt(426.1, 147.1).lt(425.7, 145.9).lt(425.0, 144.1).lt(424.3, 143.2).lt(423.6, 142.0).lt(423.4, 139.3).lt(418.7, 139.9).lt(405.5, 140.8).lt(401.3, 140.6).lt(401.4, 141.7).lt(402.5, 142.0).lt(403.0, 142.6).lt(403.2, 143.5).lt(405.1, 145.2).lt(405.4, 146.3).lt(405.1, 147.9).lt(404.2, 149.7).lt(403.8, 150.9).lt(402.7, 151.8).lt(401.9, 152.1).lt(399.3, 152.8).lt(399.0, 153.7).lt(398.7, 154.7).lt(399.0, 155.4).lt(399.9, 156.1).lt(399.8, 158.1).lt(398.9, 158.9).lt(398.5, 159.7).lt(398.5, 161.0).lt(397.7, 161.3).lt(396.9, 161.8).lt(396.8, 162.5).lt(396.9, 163.5).lt(396.1, 164.1).lt(395.6, 165.5).lt(395.8, 167.3).lt(396.9, 170.8).lt(400.4, 174.5).lt(403.1, 176.2).lt(403.0, 178.4).lt(403.4, 179.0).lt(406.5, 179.2).lt(407.8, 179.9).lt(407.5, 181.7).lt(406.4, 184.6).lt(406.1, 186.1).lt(407.2, 188.0).lt(410.3, 190.6).lt(412.5, 190.9).lt(413.5, 193.3).lt(414.5, 194.9).lt(414.0, 196.3).lt(414.8, 198.3).lt(415.7, 199.3).lt(417.1, 199.2).lt(417.4, 198.2).lt(418.5, 197.3).lt(419.5, 197.0).lt(420.8, 197.6).lt(422.5, 198.3).lt(423.1, 198.1).lt(423.2, 197.0).lt(422.5, 195.8).lt(422.7, 194.7).lt(423.6, 194.0).lt(424.9, 193.7).lt(425.7, 193.4).lt(425.3, 192.5).lt(425.0, 191.6).lt(425.5, 191.2).lt(426.0, 189.5).ef().es();
    addShape(s, map[12]);

    // state/IN
    s.f(fColor).s(w).mt(426.1, 189.6).lt(426.0, 187.7).lt(426.2, 185.5).lt(427.3, 184.1).lt(428.2, 182.2).lt(429.4, 180.2).lt(429.2, 177.4).lt(428.3, 176.0).lt(428.2, 174.5).lt(428.6, 171.8).lt(428.3, 168.4).lt(427.7, 160.6).lt(427.1, 153.2).lt(426.6, 147.5).lt(428.1, 147.9).lt(428.8, 148.4).lt(429.3, 148.2).lt(430.4, 147.3).lt(431.7, 146.5).lt(434.2, 146.4).lt(444.8, 145.3).lt(447.8, 145.0).lt(447.9, 145.6).lt(448.6, 152.7).lt(449.4, 159.4).lt(450.7, 170.8).lt(450.9, 173.5).lt(450.7, 174.6).lt(451.4, 175.3).lt(451.5, 176.3).lt(450.2, 177.2).lt(448.3, 178.1).lt(447.0, 178.2).lt(446.8, 180.4).lt(444.5, 182.3).lt(443.1, 184.1).lt(443.3, 185.2).lt(442.9, 186.2).lt(440.6, 186.2).lt(440.1, 185.4).lt(439.5, 185.8).lt(438.1, 186.6).lt(438.2, 188.2).lt(437.2, 188.4).lt(436.8, 187.9).lt(435.8, 187.1).lt(434.4, 187.8).lt(433.6, 189.4).lt(432.7, 189.0).lt(432.0, 188.1).lt(430.3, 188.3).lt(427.5, 188.8).lt(426.1, 189.6).ef().es();
    addShape(s, map[13]);

    // state/IA
    s.f(fColor).s(w).mt(401.4, 140.8).lt(401.4, 141.7).lt(402.5, 142.0).lt(403.0, 142.6).lt(403.2, 143.5).lt(405.1, 145.2).lt(405.4, 146.3).lt(405.1, 147.9).lt(404.2, 149.7).lt(403.8, 150.9).lt(402.7, 151.8).lt(401.9, 152.1).lt(399.3, 152.8).lt(399.0, 153.7).lt(398.7, 154.7).lt(399.0, 155.4).lt(399.9, 156.1).lt(399.8, 158.1).lt(398.9, 158.9).lt(398.5, 159.7).lt(398.5, 161.0).lt(397.7, 161.3).lt(396.9, 161.8).lt(396.8, 162.5).lt(396.9, 163.5).lt(396.1, 164.3).lt(394.5, 162.7).lt(393.9, 161.6).lt(390.1, 161.9).lt(385.4, 162.1).lt(373.1, 162.6).lt(366.6, 162.7).lt(362.1, 162.8).lt(361.5, 162.9).lt(360.7, 160.3).lt(360.6, 157.0).lt(359.9, 155.0).lt(359.5, 152.5).lt(358.4, 150.7).lt(358.0, 148.4).lt(356.6, 144.7).lt(356.1, 142.1).lt(355.4, 141.0).lt(354.7, 139.7).lt(355.5, 137.6).lt(356.2, 134.8).lt(354.9, 133.8).lt(354.7, 132.5).lt(355.1, 131.3).lt(355.9, 131.3).lt(361.5, 131.3).lt(385.5, 130.9).lt(394.2, 130.6).lt(396.2, 130.5).lt(396.6, 132.2).lt(397.7, 132.9).lt(397.8, 133.6).lt(396.8, 135.3).lt(396.9, 136.8).lt(398.1, 138.7).lt(399.3, 139.3).lt(400.8, 139.5).lt(401.4, 140.8).ef().es();
    addShape(s, map[14]);

    // state/KS
    s.f(fColor).s(w).mt(370.8, 201.2).lt(364.4, 201.6).lt(341.9, 201.3).lt(320.2, 200.3).lt(308.5, 199.7).lt(310.5, 167.8).lt(321.1, 168.1).lt(340.6, 168.8).lt(362.0, 169.0).lt(364.9, 169.0).lt(366.4, 170.4).lt(367.5, 170.5).lt(368.1, 170.9).lt(368.1, 172.4).lt(367.3, 173.1).lt(367.0, 174.2).lt(368.0, 175.9).lt(369.3, 177.4).lt(370.5, 178.2).lt(371.1, 183.9).lt(370.8, 201.2).ef().es();
    addShape(s, map[15]);

    // state/KY
    s.f(fColor).s(w).mt(476.4, 187.7).bt(474.9, 189.3, 473.2, 190.6, 471.8, 192.3).bt(471.2, 192.9, 470.3, 193.7, 469.8, 194.4).bt(469.4, 195.1, 470.2, 195.3, 469.3, 195.7).bt(468.8, 196.0, 468.3, 196.2, 467.9, 196.5).bt(466.4, 197.4, 464.9, 198.7, 463.2, 198.9).bt(460.7, 199.1, 458.2, 199.3, 455.8, 199.6).bt(450.2, 200.1, 444.7, 200.6, 439.1, 201.1).bt(435.1, 201.5, 431.2, 202.3, 427.2, 202.3).bt(427.2, 203.8, 427.5, 204.1, 425.9, 204.2).bt(424.7, 204.3, 423.6, 204.3, 422.4, 204.5).bt(419.8, 204.7, 417.3, 204.8, 414.7, 204.8).bt(415.1, 204.2, 415.7, 203.6, 416.4, 203.3).bt(417.4, 202.7, 417.2, 202.4, 417.3, 201.2).bt(417.4, 200.8, 417.9, 200.6, 417.7, 200.2).bt(417.4, 199.8, 416.9, 199.3, 417.1, 198.9).bt(417.5, 197.9, 418.2, 197.4, 419.2, 197.1).bt(419.7, 196.9, 424.5, 199.6, 423.1, 196.8).bt(421.7, 194.3, 423.9, 194.2, 425.7, 193.4).bt(425.5, 193.0, 425.3, 192.7, 425.2, 192.3).bt(424.9, 191.2, 425.3, 191.9, 425.5, 191.2).bt(425.9, 189.8, 426.1, 189.6, 427.3, 188.8).bt(428.6, 188.1, 431.8, 187.7, 432.6, 188.9).bt(433.8, 190.5, 434.6, 186.0, 436.6, 187.8).bt(437.6, 188.6, 438.2, 188.6, 438.1, 187.1).bt(438.1, 186.1, 439.3, 186.0, 440.1, 185.4).bt(440.3, 186.2, 440.8, 186.2, 441.5, 186.2).bt(442.8, 186.2, 442.7, 186.3, 443.3, 185.2).bt(443.4, 184.9, 443.0, 184.4, 443.1, 184.1).bt(443.2, 183.6, 443.9, 183.1, 444.1, 182.8).bt(444.7, 182.1, 445.4, 181.6, 446.1, 181.0).bt(446.8, 180.4, 446.8, 180.3, 446.9, 179.3).bt(447.0, 177.8, 447.1, 178.5, 448.3, 178.1).bt(449.0, 177.9, 449.8, 177.5, 450.3, 177.1).bt(451.4, 176.4, 451.4, 176.5, 451.4, 175.3).bt(451.4, 174.8, 450.0, 174.5, 451.0, 173.6).bt(451.3, 173.2, 452.6, 173.6, 453.1, 173.4).bt(455.2, 172.7, 455.7, 174.2, 456.3, 175.8).bt(456.4, 176.2, 458.3, 176.1, 458.7, 176.1).bt(459.4, 176.1, 459.6, 177.0, 460.2, 177.0).bt(461.5, 177.1, 463.3, 175.4, 464.3, 177.3).bt(464.9, 176.7, 465.5, 176.1, 466.2, 175.6).bt(467.4, 174.7, 467.2, 176.2, 467.6, 176.7).bt(467.9, 177.2, 469.2, 177.7, 469.7, 178.0).bt(470.5, 178.5, 470.2, 179.6, 470.2, 180.5).bt(470.2, 181.3, 470.6, 181.7, 471.2, 182.1).bt(472.1, 182.5, 471.9, 183.2, 472.5, 183.9).bt(473.7, 185.4, 474.8, 186.6, 476.4, 187.7).lt(476.4, 187.7).ef().es();
    addShape(s, map[16]);

    // states/LA
    s.f(fColor).s(w).mt(418.7, 272.7).bt(417.9, 271.4, 417.9, 270.1, 416.7, 269.0).bt(415.1, 267.5, 417.3, 265.7, 416.3, 264.3).bt(415.7, 263.6, 407.7, 264.6, 406.5, 264.7).bt(404.3, 264.7, 402.2, 264.8, 400.0, 264.9).bt(398.7, 264.9, 399.5, 262.0, 399.6, 261.2).bt(399.8, 258.4, 404.8, 254.2, 403.4, 251.8).bt(405.3, 251.1, 402.7, 247.9, 402.3, 246.2).bt(402.0, 245.0, 402.9, 243.5, 401.3, 243.5).bt(399.8, 243.5, 398.3, 243.5, 396.7, 243.6).bt(390.1, 243.9, 383.5, 244.0, 376.9, 244.0).bt(376.9, 247.2, 376.7, 250.5, 377.3, 253.7).bt(377.9, 257.0, 380.1, 259.3, 381.3, 262.2).bt(382.6, 265.3, 380.6, 267.8, 380.0, 270.6).bt(379.9, 271.2, 380.8, 271.4, 380.6, 272.3).bt(380.3, 273.2, 380.3, 274.2, 380.2, 275.2).bt(380.1, 276.8, 379.2, 278.1, 379.5, 279.7).bt(383.3, 278.0, 386.7, 279.2, 390.4, 280.5).bt(392.1, 281.0, 393.6, 281.2, 395.1, 280.6).bt(396.5, 280.0, 398.7, 282.6, 399.1, 280.4).bt(398.2, 279.9, 395.3, 280.4, 395.0, 279.3).bt(394.5, 278.1, 398.3, 278.3, 398.6, 278.4).bt(400.0, 278.8, 400.9, 280.9, 401.5, 281.0).bt(402.9, 281.1, 405.2, 282.0, 403.0, 283.2).bt(404.7, 284.9, 407.4, 285.9, 409.6, 285.0).bt(409.9, 284.9, 411.2, 282.6, 412.1, 282.8).bt(413.5, 283.2, 413.3, 284.8, 412.1, 285.1).bt(413.5, 285.8, 414.6, 284.0, 415.5, 282.9).bt(415.2, 282.9, 414.8, 282.8, 414.5, 282.8).bt(414.6, 281.6, 415.3, 280.9, 416.4, 280.4).bt(416.6, 282.5, 421.5, 284.3, 423.4, 284.7).bt(425.2, 283.1, 424.3, 281.9, 422.2, 281.2).bt(421.2, 280.8, 419.9, 281.2, 419.0, 280.5).bt(417.7, 279.6, 417.6, 278.3, 419.5, 278.5).bt(419.5, 278.5, 418.9, 277.6, 418.7, 277.5).bt(422.2, 278.5, 420.8, 272.5, 419.2, 274.3).bt(418.6, 275.0, 417.8, 277.4, 416.7, 275.3).bt(416.2, 274.5, 418.0, 273.3, 418.7, 272.7).lt(418.7, 272.7).ef().es();
    addShape(s, map[17]);

    // states/ME
    s.f(fColor).s(w).mt(573.3, 80.6).bt(575.2, 82.3, 576.0, 84.3, 574.3, 86.6).bt(573.8, 87.3, 569.5, 91.1, 568.8, 91.1).bt(568.3, 91.1, 568.2, 89.1, 567.2, 90.5).bt(566.8, 91.2, 564.8, 91.7, 565.7, 92.6).bt(566.7, 93.5, 564.8, 96.1, 564.6, 93.1).bt(563.8, 92.7, 563.5, 93.1, 563.0, 91.7).bt(562.7, 91.9, 562.3, 92.1, 562.0, 92.3).bt(562.8, 93.4, 563.0, 95.9, 562.2, 97.1).bt(561.6, 98.1, 561.1, 97.3, 560.4, 98.0).bt(559.9, 98.5, 560.7, 99.2, 559.9, 99.6).bt(558.5, 100.4, 557.5, 101.6, 556.3, 100.4).bt(554.9, 101.4, 554.7, 103.2, 554.6, 104.3).bt(554.3, 106.3, 554.1, 108.2, 553.7, 110.2).bt(552.6, 109.9, 552.5, 109.5, 552.3, 108.5).bt(552.2, 107.4, 550.5, 108.3, 550.3, 106.9).bt(550.1, 104.7, 549.1, 102.6, 548.5, 100.5).bt(547.2, 96.2, 545.8, 92.0, 544.4, 87.7).bt(545.1, 87.8, 545.7, 87.5, 546.3, 87.7).bt(546.3, 84.5, 548.6, 82.4, 548.7, 79.5).bt(548.7, 78.4, 547.5, 77.1, 547.8, 75.5).bt(547.9, 74.5, 548.5, 73.7, 548.4, 72.6).bt(548.4, 69.9, 549.4, 66.3, 550.6, 63.9).bt(553.0, 59.4, 552.0, 64.1, 554.9, 63.9).bt(556.0, 63.8, 557.1, 60.1, 559.1, 61.0).bt(562.9, 62.5, 562.8, 63.2, 564.0, 67.2).bt(564.4, 68.5, 566.1, 77.0, 567.4, 77.0).bt(572.1, 77.0, 568.4, 80.8, 572.1, 81.4).bt(572.1, 81.3, 572.0, 80.8, 572.0, 80.6).bt(572.4, 80.6, 572.9, 80.6, 573.3, 80.6).lt(573.3, 80.6).ef().es();
    addShape(s, map[18]);

    // states/MD
    s.f(fColor).s(w).mt(531.5, 166.6).lt(528.5, 167.2).lt(526.1, 167.3).lt(525.3, 164.3).lt(524.3, 159.6).lt(523.2, 156.8).lt(522.6, 154.7).lt(518.6, 155.5).lt(511.4, 156.8).lt(493.3, 160.5).lt(493.8, 162.9).lt(494.3, 165.7).lt(494.5, 165.5).lt(495.5, 164.3).lt(496.6, 162.8).lt(497.7, 162.8).lt(498.4, 162.1).lt(499.3, 160.8).lt(499.9, 161.1).lt(501.3, 161.0).lt(502.6, 159.9).lt(503.5, 159.2).lt(504.4, 159.0).lt(505.2, 159.6).lt(506.6, 160.3).lt(507.6, 161.1).lt(508.2, 161.9).lt(510.2, 162.7).lt(510.2, 164.1).lt(512.8, 164.7).lt(513.8, 165.4).lt(514.2, 164.4).lt(515.3, 165.2).lt(514.6, 166.8).lt(514.5, 168.1).lt(513.6, 169.4).lt(513.6, 170.4).lt(513.9, 171.3).lt(516.4, 171.9).lt(518.4, 171.9).lt(519.9, 172.3).lt(520.9, 172.5).lt(521.4, 171.5).lt(520.7, 170.5).lt(520.7, 169.6).lt(519.5, 168.6).lt(518.5, 165.9).lt(519.1, 163.3).lt(519.1, 162.3).lt(518.4, 161.7).bt(518.4, 161.7, 519.1, 160.9, 519.1, 160.6).bt(519.1, 160.3, 519.4, 159.6, 519.4, 159.6).lt(520.3, 158.9).lt(521.3, 158.1).lt(521.5, 158.6).lt(520.8, 159.4).lt(520.2, 161.2).lt(520.3, 161.7).lt(521.2, 161.9).lt(521.4, 164.6).lt(520.4, 165.0).lt(520.6, 166.8).lt(520.8, 166.7).lt(521.3, 165.8).lt(522.1, 166.6).lt(521.3, 167.2).lt(521.2, 168.9).lt(522.4, 170.5).lt(524.3, 170.8).lt(525.1, 170.4).lt(526.7, 172.9).lt(527.5, 173.1).lt(527.5, 174.9).lt(526.4, 177.2).lt(526.2, 180.6).lt(526.9, 182.2).lt(527.6, 182.3).lt(528.5, 180.3).lt(528.9, 178.6).lt(529.0, 175.1).lt(530.5, 172.7).lt(531.5, 169.4).lt(531.5, 166.6).lt(531.5, 166.6).ef().es();
    addShape(s, map[19]);

    // states/MD
    s.f(fColor).s(w).mt(540.7, 117.1).lt(549.2, 115.1).lt(550.3, 114.8).lt(551.3, 113.2).lt(553.1, 112.4).lt(554.5, 114.6).lt(553.3, 117.1).lt(553.1, 117.8).lt(554.1, 119.0).lt(554.6, 118.6).lt(555.5, 118.6).lt(556.6, 119.9).lt(558.5, 122.8).lt(560.2, 123.0).lt(561.3, 122.6).lt(562.1, 121.7).lt(561.7, 120.4).lt(560.7, 119.6).lt(560.0, 120.0).lt(559.6, 119.3).lt(559.8, 119.1).lt(560.8, 119.0).lt(561.7, 119.4).lt(562.6, 120.6).lt(563.1, 122.0).lt(563.2, 123.2).lt(561.2, 123.9).lt(559.3, 124.8).lt(557.4, 127.0).lt(556.5, 127.7).lt(556.5, 127.3).lt(557.7, 126.6).lt(557.9, 125.7).lt(557.5, 124.2).lt(556.1, 124.9).lt(555.7, 125.6).lt(556.0, 126.7).lt(554.6, 127.4).lt(553.3, 125.2).lt(551.7, 123.1).lt(550.9, 122.6).lt(548.1, 123.3).lt(545.6, 123.8).lt(535.1, 126.1).lt(534.6, 123.3).lt(534.9, 118.2).lt(537.4, 117.8).lt(540.7, 117.1).ef().es();
    addShape(s, map[20]);

    // states/MI
    s.f(fColor).s(w).mt(464.4, 129.1).lt(462.8, 125.1).lt(461.7, 120.7).lt(460.5, 119.1).lt(459.3, 118.2).lt(458.5, 118.8).lt(456.6, 119.7).lt(455.7, 122.1).lt(454.4, 123.9).lt(453.8, 124.2).lt(453.1, 123.9).bt(453.1, 123.9, 451.9, 123.2, 451.9, 122.9).bt(452.0, 122.6, 452.2, 120.4, 452.2, 120.4).lt(453.8, 119.8).lt(454.2, 118.2).lt(454.5, 116.9).lt(455.7, 116.1).lt(455.5, 111.3).lt(454.7, 110.2).lt(454.1, 109.8).lt(453.7, 108.7).lt(454.1, 108.4).lt(454.9, 108.5).lt(455.0, 107.7).lt(453.8, 106.6).lt(453.2, 105.4).lt(451.9, 105.4).lt(449.7, 104.7).lt(447.1, 103.0).lt(445.8, 103.0).lt(445.4, 103.3).lt(445.0, 103.1).lt(443.5, 102.0).lt(442.1, 102.9).lt(440.7, 104.0).lt(440.8, 105.7).lt(441.3, 105.8).lt(442.3, 106.1).lt(442.6, 106.5).lt(441.3, 106.9).lt(440.1, 107.0).lt(439.3, 107.9).lt(439.2, 108.9).lt(439.3, 109.7).lt(439.5, 112.4).lt(437.8, 113.4).lt(437.5, 113.3).lt(437.5, 111.3).lt(438.1, 110.1).lt(438.4, 108.9).lt(438.0, 108.5).lt(437.1, 108.9).lt(436.6, 110.9).lt(435.3, 111.5).lt(434.4, 112.4).lt(434.3, 112.9).lt(434.7, 113.3).lt(434.3, 114.6).lt(433.3, 114.8).lt(433.3, 115.3).lt(433.6, 116.5).lt(433.1, 119.5).lt(432.3, 121.5).lt(432.6, 123.7).lt(432.9, 124.3).lt(432.5, 125.5).lt(432.3, 125.9).lt(432.2, 127.2).lt(433.9, 130.1).lt(435.3, 133.2).lt(436.0, 135.6).lt(435.6, 137.9).lt(435.1, 140.8).lt(434.0, 143.3).lt(433.8, 144.6).lt(432.3, 146.1).lt(431.9, 146.5).lt(434.2, 146.4).lt(444.8, 145.3).lt(447.8, 145.0).lt(447.9, 145.6).lt(451.7, 145.0).lt(456.6, 144.2).lt(459.1, 144.0).lt(458.5, 143.5).lt(458.6, 142.7).lt(459.6, 140.9).lt(460.6, 140.1).lt(460.4, 137.6).lt(461.2, 136.9).lt(461.8, 136.7).lt(461.9, 135.0).lt(462.6, 133.5).lt(463.1, 133.8).lt(463.2, 134.1).lt(463.6, 134.2).lt(464.5, 133.7).lt(464.4, 129.1).ef().es();

    s.f(fColor).s(w).mt(400.8, 97.2).lt(401.7, 96.7).lt(403.0, 96.3).lt(404.7, 95.2).lt(404.7, 94.8).lt(405.0, 94.5).lt(407.9, 94.0).lt(409.1, 93.0).lt(411.2, 92.0).lt(411.3, 91.4).lt(412.2, 90.0).lt(413.1, 89.6).lt(413.7, 88.7).lt(414.8, 87.6).lt(416.9, 86.4).lt(419.2, 86.2).lt(419.7, 86.8).lt(419.6, 87.2).lt(417.8, 87.7).lt(417.1, 89.2).lt(416.0, 89.6).lt(415.7, 90.8).lt(414.6, 92.3).lt(414.4, 93.6).lt(414.8, 93.8).lt(415.3, 93.3).lt(417.0, 91.9).lt(417.6, 92.5).lt(418.7, 92.5).lt(420.3, 93.0).lt(421.0, 93.5).lt(421.7, 95.0).lt(423.0, 96.3).lt(424.9, 96.3).lt(425.6, 95.8).lt(426.4, 96.4).lt(427.2, 96.7).lt(427.8, 96.3).lt(428.3, 96.3).lt(429.1, 95.8).lt(431.1, 94.1).lt(432.7, 93.5).lt(435.9, 93.4).lt(438.1, 92.4).lt(439.3, 91.8).lt(440.1, 91.9).lt(440.1, 94.6).lt(440.3, 94.8).lt(441.7, 95.2).lt(442.6, 94.9).lt(445.6, 94.1).lt(446.1, 93.6).lt(446.9, 93.8).lt(446.9, 97.2).lt(448.4, 98.7).lt(449.0, 99.0).lt(449.7, 99.5).lt(449.0, 99.6).lt(448.6, 99.5).lt(446.9, 99.2).lt(445.8, 99.6).lt(444.7, 99.5).lt(443.2, 100.2).lt(442.3, 100.2).lt(439.5, 99.6).lt(437.0, 99.6).lt(436.1, 100.9).lt(432.7, 101.2).lt(431.5, 101.6).lt(431.0, 103.1).lt(430.4, 103.6).lt(430.1, 103.6).lt(429.4, 102.8).lt(427.2, 104.0).lt(426.9, 104.0).lt(426.4, 103.2).lt(426.0, 103.2).lt(425.0, 105.4).lt(424.6, 107.3).lt(422.8, 111.3).lt(422.0, 110.7).lt(421.3, 110.1).lt(420.5, 105.1).lt(418.8, 104.5).lt(418.1, 103.4).lt(412.0, 102.1).lt(410.8, 101.5).lt(406.8, 100.4).lt(402.9, 99.8).lt(400.8, 97.2).ef().es();
    addShape(s, map[21]);

    // states/MN
    s.f(fColor).s(w).mt(355.1, 105.4).bt(354.8, 99.6, 353.2, 94.0, 353.0, 88.1).bt(352.9, 85.8, 351.2, 84.0, 351.2, 81.8).bt(351.2, 79.0, 352.1, 75.3, 350.7, 72.8).bt(354.3, 72.8, 365.2, 74.8, 365.3, 70.8).bt(365.6, 64.1, 369.3, 75.8, 370.2, 75.8).bt(371.1, 75.8, 375.2, 76.6, 375.2, 77.1).bt(375.2, 79.5, 378.1, 76.5, 378.2, 76.5).bt(381.0, 76.6, 385.6, 80.2, 387.9, 78.6).bt(388.3, 79.5, 389.9, 81.4, 390.3, 81.5).bt(393.7, 82.5, 393.1, 80.4, 396.0, 79.9).bt(396.8, 79.7, 397.4, 80.9, 398.8, 80.8).bt(402.1, 80.7, 403.4, 82.9, 406.1, 81.5).bt(405.0, 83.8, 401.8, 84.3, 399.4, 85.5).bt(396.7, 86.9, 395.2, 90.5, 393.0, 91.5).bt(391.5, 92.2, 388.9, 95.2, 388.4, 96.0).bt(386.7, 98.5, 387.5, 100.7, 386.4, 103.5).bt(385.9, 104.6, 384.1, 104.8, 383.6, 106.1).bt(382.2, 109.6, 384.1, 107.3, 384.2, 109.4).bt(384.2, 111.9, 382.4, 116.2, 384.6, 118.3).bt(388.0, 121.8, 396.4, 123.6, 396.2, 130.6).bt(382.8, 130.5, 369.4, 131.3, 355.9, 131.3).bt(356.6, 125.4, 356.1, 119.3, 356.1, 113.4).bt(356.1, 111.1, 353.6, 111.0, 353.3, 109.2).bt(353.2, 108.0, 355.0, 107.0, 355.1, 105.4).lt(355.1, 105.4).ef().es();
    addShape(s, map[22]);

    // states/MS
    s.f(fColor).s(w).mt(429.4, 269.8).lt(428.8, 270.4).lt(426.3, 270.4).lt(425.6, 270.0).lt(424.6, 269.9).lt(421.3, 270.8).lt(420.4, 270.4).lt(419.2, 272.5).lt(418.6, 272.9).lt(418.1, 271.6).lt(417.6, 269.8).lt(415.9, 268.2).lt(416.4, 264.5).lt(416.1, 264.1).lt(415.2, 264.2).lt(411.3, 264.5).lt(399.5, 264.9).lt(399.3, 264.1).lt(399.6, 260.2).lt(401.3, 257.2).lt(403.8, 252.8).lt(403.4, 251.8).lt(404.0, 251.8).lt(404.3, 250.2).lt(403.2, 249.3).lt(403.3, 248.4).lt(402.3, 246.2).lt(402.2, 243.6).lt(402.8, 242.3).lt(402.6, 240.2).lt(402.0, 238.8).lt(402.6, 238.1).lt(402.0, 237.1).lt(402.2, 236.2).lt(402.6, 233.2).lt(404.1, 231.9).lt(403.7, 230.9).lt(405.5, 228.3).lt(406.8, 227.9).lt(406.8, 226.7).lt(406.5, 226.0).lt(407.8, 223.4).lt(409.2, 222.9).lt(409.2, 221.2).lt(413.4, 221.2).lt(425.0, 220.3).lt(427.7, 220.1).lt(427.7, 223.2).lt(427.8, 231.3).lt(427.4, 246.4).lt(427.3, 253.2).lt(428.6, 262.3).lt(429.4, 269.8).ef().es();
    addShape(s, map[23]);

    // states/MO
    s.f(fColor).s(w).mt(396.0, 164.3).lt(394.5, 162.7).lt(393.9, 161.6).lt(390.1, 161.9).lt(385.4, 162.1).lt(373.1, 162.6).lt(366.6, 162.7).lt(362.8, 162.8).lt(361.7, 162.8).lt(362.3, 164.0).lt(362.2, 165.1).lt(363.4, 167.0).lt(364.9, 169.0).lt(366.4, 170.4).lt(367.5, 170.5).lt(368.1, 170.9).lt(368.1, 172.4).lt(367.3, 173.1).lt(367.0, 174.2).lt(368.0, 175.9).lt(369.3, 177.4).lt(370.5, 178.2).lt(371.1, 183.9).lt(370.8, 201.1).lt(370.9, 203.3).lt(371.1, 206.7).lt(382.4, 206.5).lt(393.7, 206.1).lt(403.7, 205.7).lt(409.0, 205.5).lt(409.9, 206.9).lt(409.7, 208.0).lt(408.2, 209.3).lt(407.8, 210.8).lt(410.8, 211.0).lt(413.2, 210.7).lt(414.2, 207.6).lt(414.2, 204.8).lt(415.6, 204.1).lt(416.2, 203.3).lt(417.2, 202.8).lt(417.3, 201.2).lt(417.8, 200.3).lt(417.1, 199.2).lt(415.7, 199.3).lt(414.8, 198.3).lt(414.0, 196.3).lt(414.5, 194.9).lt(413.5, 193.3).lt(412.5, 190.9).lt(410.3, 190.6).lt(407.2, 188.0).lt(406.1, 186.1).lt(406.4, 184.6).lt(407.5, 181.7).lt(407.8, 179.9).lt(406.5, 179.2).lt(403.4, 179.0).lt(403.0, 178.4).lt(403.1, 176.2).lt(400.4, 174.5).lt(396.9, 170.8).lt(395.8, 167.3).lt(395.6, 165.5).lt(396.0, 164.3).ef().es();
    addShape(s, map[24]);

    // states/MT
    s.f(fColor).s(w).mt(299.8, 102.6).lt(300.2, 97.0).lt(301.3, 84.8).lt(301.9, 77.5).lt(302.5, 70.6).lt(287.1, 69.0).lt(272.9, 67.3).lt(258.8, 65.3).lt(243.2, 62.7).lt(234.3, 61.1).lt(218.4, 57.7).lt(216.3, 68.1).lt(217.9, 71.7).lt(217.3, 74.0).lt(218.2, 76.2).lt(219.7, 76.9).lt(221.5, 81.9).lt(223.2, 83.6).lt(223.5, 84.2).lt(225.1, 84.7).lt(225.3, 85.7).lt(221.9, 94.3).lt(221.9, 95.5).lt(223.1, 97.1).lt(223.6, 97.1).lt(225.9, 95.6).lt(226.2, 95.1).lt(227.0, 95.4).lt(226.9, 98.0).lt(228.2, 104.1).lt(229.6, 105.3).lt(230.1, 105.6).lt(231.0, 106.7).lt(230.8, 108.4).lt(231.1, 110.1).lt(231.6, 110.5).lt(232.7, 109.4).lt(234.1, 109.4).lt(235.6, 110.2).lt(236.8, 109.7).lt(238.8, 109.7).lt(240.6, 110.5).lt(241.9, 110.3).lt(242.1, 108.8).lt(243.6, 108.5).lt(244.2, 109.2).lt(244.5, 110.7).lt(245.7, 111.9).lt(246.4, 106.4).lt(256.1, 107.8).lt(269.8, 109.8).lt(277.6, 110.8).lt(293.1, 112.4).lt(298.7, 113.0).lt(299.5, 105.3).lt(299.8, 102.6).ef().es();
    addShape(s, map[25]);

    // states/NE
    s.f(fColor).s(w).mt(361.6, 162.8).lt(362.3, 164.0).lt(362.2, 165.1).lt(363.4, 167.0).lt(364.9, 169.0).lt(362.0, 169.0).lt(340.6, 168.8).lt(321.1, 168.1).lt(310.5, 167.8).lt(311.3, 156.9).lt(295.2, 155.6).lt(297.3, 134.2).lt(304.8, 134.7).lt(314.5, 135.3).lt(323.2, 135.8).lt(334.7, 136.4).lt(339.9, 136.2).lt(340.8, 137.3).lt(343.2, 138.7).lt(343.7, 139.2).lt(345.8, 138.5).lt(347.7, 138.3).lt(349.0, 138.2).lt(349.9, 138.8).lt(352.3, 139.6).lt(353.8, 140.4).lt(354.0, 141.2).lt(354.4, 142.2).lt(355.3, 142.2).lt(356.1, 142.1).lt(356.7, 144.7).lt(358.0, 148.4).lt(358.4, 150.7).lt(359.5, 152.5).lt(359.9, 155.0).lt(360.6, 157.0).lt(360.7, 160.3).lt(361.7, 162.9).ef().es();
    addShape(s, map[26]);

    // states/NV
    s.f(fColor).s(w).mt(195.0, 129.2).lt(205.1, 131.4).lt(209.8, 132.4).lt(214.3, 133.3).lt(218.2, 134.3).lt(217.6, 137.0).lt(215.9, 145.5).lt(214.1, 155.4).lt(213.1, 159.8).lt(212.1, 166.4).lt(210.5, 174.4).lt(208.9, 181.8).lt(208.0, 186.9).lt(206.5, 195.5).lt(206.3, 195.7).lt(205.5, 197.0).lt(204.3, 197.0).lt(203.7, 195.6).lt(202.3, 195.5).lt(201.9, 194.9).lt(201.5, 194.9).lt(201.0, 195.2).lt(200.1, 195.7).lt(200.0, 199.1).lt(199.9, 199.9).lt(199.6, 206.0).lt(198.9, 207.1).lt(197.7, 205.5).lt(190.7, 194.5).lt(181.3, 180.4).lt(170.3, 163.9).lt(164.3, 154.9).lt(165.1, 151.7).lt(168.5, 139.1).lt(172.3, 123.9).lt(188.5, 127.8).lt(195.2, 129.3).ef().es();
    addShape(s, map[27]);

    // states/NH
    s.f(fColor).s('white').mt(553.1, 112.4).lt(553.2, 111.6).lt(553.8, 110.1).lt(552.5, 109.6).lt(552.3, 108.1).lt(550.4, 107.6).lt(550.3, 106.2).lt(546.7, 94.8).lt(544.5, 87.8).lt(544.1, 87.8).lt(543.8, 88.6).lt(543.5, 88.3).lt(543.0, 87.9).lt(542.3, 88.8).lt(541.8, 91.5).lt(542.0, 94.2).lt(542.9, 95.6).lt(542.9, 97.5).lt(541.1, 99.5).lt(539.9, 100.0).lt(539.9, 100.6).lt(540.4, 101.4).lt(540.4, 105.6).lt(540.0, 110.1).lt(539.9, 112.4).lt(540.4, 113.1).lt(540.3, 115.3).lt(540.1, 116.1).lt(540.8, 117.1).lt(549.2, 115.1).lt(550.3, 114.8).lt(551.3, 113.2).lt(553.1, 112.4).ef().es();
    addShape(s, map[28]);

    // states/NJ
    s.f(fColor).s('white').mt(527.4, 135.4).bt(527.1, 135.8, 526.5, 136.2, 526.3, 136.6).bt(526.1, 137.1, 526.5, 137.8, 526.2, 138.3).bt(526.0, 138.7, 525.4, 139.3, 525.4, 139.8).bt(525.3, 140.5, 526.0, 140.6, 525.9, 141.2).bt(525.8, 142.8, 524.6, 142.2, 525.1, 143.9).bt(525.3, 144.6, 525.1, 144.6, 525.9, 144.7).bt(527.0, 144.8, 526.4, 145.3, 527.0, 146.0).bt(527.5, 146.5, 529.8, 147.4, 529.9, 148.0).bt(530.1, 148.7, 528.2, 150.2, 527.7, 150.8).bt(526.9, 152.0, 526.7, 152.4, 525.5, 153.1).bt(524.6, 153.7, 524.8, 155.5, 525.3, 156.3).bt(526.0, 157.3, 527.3, 157.8, 528.3, 158.3).bt(528.8, 158.6, 529.2, 158.8, 529.7, 158.8).bt(530.9, 159.0, 530.9, 158.8, 531.3, 159.8).bt(531.3, 159.8, 531.0, 161.1, 531.0, 161.4).bt(531.1, 162.1, 531.9, 161.0, 532.1, 160.8).bt(532.8, 159.9, 532.4, 158.6, 533.1, 157.7).bt(535.9, 153.5, 537.2, 148.2, 535.0, 143.5).bt(534.5, 144.0, 533.5, 144.3, 532.9, 143.8).bt(533.9, 143.0, 534.6, 142.6, 534.4, 141.3).bt(534.4, 140.6, 534.9, 138.1, 534.3, 137.8).bt(532.0, 136.8, 529.6, 136.5, 527.4, 135.4).lt(527.4, 135.4).ef().es();
    addShape(s, map[29]);

    // states/NM
    s.f(fColor).s(w).mt(264.2, 252.4).lt(263.8, 250.1).lt(267.7, 250.4).lt(281.7, 251.8).lt(295.7, 252.5).lt(296.9, 241.0).lt(298.7, 214.0).lt(299.5, 204.9).lt(300.2, 204.9).lt(300.2, 199.2).lt(284.2, 198.1).lt(266.3, 195.9).lt(249.7, 193.9).lt(247.7, 208.8).lt(244.3, 234.7).lt(242.5, 247.8).lt(241.5, 254.2).lt(249.0, 255.2).lt(249.6, 250.3).lt(257.6, 251.6).lt(264.2, 252.4);
    addShape(s, map[30]);

    // states/NY
    s.f(fColor).s(w).mt(527.4, 135.4).lt(526.8, 135.0).lt(525.6, 134.9).lt(524.5, 134.0).lt(523.3, 131.4).lt(521.8, 130.9).lt(520.7, 129.9).lt(511.7, 131.8).lt(490.9, 136.1).lt(486.6, 136.8).lt(486.3, 133.4).lt(487.6, 132.5).lt(488.2, 132.0).lt(488.7, 131.2).lt(489.5, 130.7).lt(490.5, 129.8).lt(490.7, 129.0).lt(491.7, 127.7).lt(492.3, 127.2).lt(492.2, 126.7).lt(491.6, 125.2).lt(490.7, 125.2).lt(489.8, 122.2).lt(491.2, 121.3).lt(493.3, 120.6).lt(495.2, 120.0).lt(496.8, 119.7).lt(499.8, 119.7).lt(500.8, 120.3).lt(501.6, 120.4).lt(502.6, 119.7).lt(503.8, 119.2).lt(506.3, 119.0).lt(507.3, 118.1).lt(508.2, 116.5).lt(509.0, 115.6).lt(510.0, 115.6).lt(510.9, 115.0).lt(511.0, 113.9).lt(510.3, 112.9).lt(510.2, 112.2).lt(510.7, 111.2).lt(510.7, 110.5).lt(509.8, 110.5).lt(509.0, 110.1).lt(508.6, 109.5).lt(508.5, 108.3).lt(511.3, 105.6).lt(511.6, 105.2).lt(512.3, 103.8).lt(513.8, 101.6).lt(515.1, 99.8).lt(516.1, 98.6).lt(517.3, 97.7).lt(518.8, 97.1).lt(521.4, 96.5).lt(523.0, 96.6).lt(525.2, 95.9).lt(528.8, 94.9).lt(529.1, 97.3).lt(530.2, 100.4).lt(530.6, 102.9).lt(530.2, 104.8).lt(531.4, 107.0).lt(531.8, 108.0).lt(531.4, 109.5).lt(532.8, 110.1).lt(533.1, 110.2).lt(534.6, 115.6).lt(534.9, 118.1).lt(534.6, 123.3).lt(535.0, 126.0).lt(535.4, 127.7).lt(536.1, 131.3).lt(536.1, 135.2).lt(535.6, 136.3).lt(536.5, 137.3).lt(536.3, 138.0).lt(535.4, 138.9).lt(535.6, 139.5).lt(536.2, 139.4).lt(536.9, 138.7).lt(538.0, 137.5).lt(538.5, 137.2).lt(539.3, 137.5).lt(540.4, 137.6).lt(544.2, 135.7).lt(545.6, 134.3).lt(546.3, 133.6).lt(548.3, 134.4).lt(546.7, 136.1).lt(544.8, 137.6).lt(541.3, 140.2).lt(540.1, 140.6).lt(537.3, 141.6).lt(535.3, 142.1).lt(534.6, 141.9).lt(534.3, 140.2).lt(534.5, 138.9).lt(534.5, 137.9).lt(533.2, 137.3).lt(531.0, 136.9).lt(529.2, 136.3).lt(527.4, 135.4).ef().es();
    addShape(s, map[31]);

    // states/NC
    s.f(fColor).s(w).mt(529.3, 188.0).lt(530.1, 190.3).lt(531.8, 193.4).lt(533.0, 194.6).lt(533.3, 195.7).lt(532.1, 195.8).lt(532.5, 196.1).lt(532.4, 198.1).lt(531.1, 198.7).lt(530.8, 199.8).lt(530.2, 201.2).lt(528.4, 202.0).lt(527.2, 201.8).lt(526.5, 201.7).lt(525.7, 201.1).lt(525.9, 201.7).lt(525.9, 202.2).lt(526.8, 202.2).lt(527.2, 202.8).lt(526.3, 205.9).lt(528.3, 205.9).lt(528.6, 206.7).lt(529.7, 205.6).lt(530.3, 205.3).lt(529.4, 207.1).lt(527.9, 209.4).lt(527.3, 209.4).lt(526.7, 209.2).lt(525.4, 209.5).lt(522.9, 210.7).lt(519.8, 213.3).lt(518.1, 215.5).lt(517.2, 218.7).lt(517.0, 219.9).lt(514.7, 220.1).lt(511.8, 221.2).lt(507.0, 217.2).lt(500.9, 213.5).lt(499.5, 213.1).lt(493.4, 213.8).lt(491.3, 214.0).lt(490.5, 212.5).lt(489.4, 211.5).lt(481.5, 211.8).lt(478.0, 212.2).lt(473.6, 214.4).lt(470.6, 215.6).lt(469.8, 215.8).lt(467.0, 216.2).lt(463.7, 216.6).lt(460.4, 216.9).lt(460.5, 214.5).lt(461.4, 213.8).lt(462.7, 213.5).lt(463.0, 211.7).lt(465.1, 210.4).lt(466.9, 209.7).lt(469.0, 207.9).lt(471.1, 206.9).lt(471.4, 205.4).lt(473.3, 203.5).lt(473.6, 203.4).bt(473.6, 203.4, 473.6, 204.0, 474.0, 204.0).bt(474.4, 204.0, 474.9, 204.2, 474.9, 204.2).lt(476.0, 202.4).lt(477.0, 202.1).lt(478.1, 202.3).lt(478.9, 200.5).lt(480.3, 199.3).lt(480.5, 198.3).lt(480.5, 196.3).lt(482.7, 196.7).lt(486.2, 196.1).lt(493.8, 195.1).lt(502.1, 193.9).lt(512.1, 192.0).lt(521.3, 190.2).lt(526.9, 188.8).lt(529.3, 188.0).ef().es();
    addShape(s, map[32]);

    // states/ND
    s.f(fColor).s(w).mt(355.2, 105.4).lt(354.9, 101.3).lt(354.0, 97.7).lt(353.1, 91.2).lt(352.9, 86.4).lt(352.0, 84.7).lt(351.2, 82.3).lt(351.2, 77.3).lt(351.6, 75.4).lt(350.6, 72.7).lt(336.4, 72.5).lt(327.4, 72.2).lt(314.6, 71.5).lt(302.5, 70.6).lt(301.9, 77.5).lt(301.3, 84.8).lt(300.2, 97.0).lt(299.9, 102.9).lt(327.0, 104.6).lt(355.2, 105.4).ef().es();
    addShape(s, map[33]);

    // states/OH
    s.f(fColor).s(w).mt(481.1, 137.7).lt(477.6, 139.7).lt(475.8, 140.8).lt(474.1, 142.6).lt(472.2, 144.5).lt(470.6, 144.9).lt(469.2, 145.1).lt(466.5, 146.4).lt(465.5, 146.4).lt(463.9, 144.9).lt(461.4, 145.3).lt(460.1, 144.6).lt(459.0, 143.9).lt(456.6, 144.2).lt(451.7, 145.0).lt(447.9, 145.6).lt(448.6, 152.7).lt(449.4, 159.4).lt(450.7, 170.8).lt(451.0, 173.6).lt(452.9, 173.4).lt(454.1, 173.1).lt(455.5, 173.8).lt(456.3, 176.0).lt(459.1, 176.1).lt(460.0, 177.0).lt(461.0, 177.1).lt(462.2, 176.4).lt(463.7, 176.6).lt(464.3, 177.3).lt(465.6, 176.0).lt(466.5, 175.4).lt(467.2, 175.4).lt(467.6, 176.7).lt(468.4, 177.2).lt(470.1, 178.4).lt(471.2, 178.3).lt(472.1, 177.9).lt(472.2, 176.6).lt(473.0, 175.9).lt(473.0, 173.5).lt(473.5, 171.6).lt(474.1, 171.3).lt(474.8, 171.8).lt(475.0, 172.7).lt(475.8, 172.2).lt(476.1, 171.4).lt(475.5, 170.5).lt(475.5, 169.4).lt(476.0, 168.7).lt(477.1, 167.1).lt(477.7, 166.4).lt(478.7, 166.6).lt(479.8, 165.8).lt(481.3, 164.2).lt(482.4, 162.3).lt(482.6, 159.6).lt(482.8, 157.1).lt(482.8, 154.8).lt(482.3, 153.3).lt(482.7, 152.6).lt(483.4, 152.3).lt(482.5, 147.1).lt(481.1, 137.7).ef().es();
    addShape(s, map[34]);

    // states/OK
    s.f(fColor).s(w).mt(308.4, 199.7).lt(303.3, 199.5).lt(300.2, 199.2).lt(300.3, 199.3).lt(300.0, 204.9).lt(310.6, 205.5).lt(325.6, 206.0).lt(324.9, 217.6).lt(324.7, 226.2).lt(324.8, 227.0).lt(326.9, 228.8).lt(327.9, 229.3).lt(328.2, 229.2).lt(328.6, 228.2).lt(329.2, 229.1).lt(330.2, 229.1).lt(330.2, 228.4).lt(331.6, 229.1).lt(331.3, 231.0).lt(333.3, 231.1).lt(334.5, 231.7).lt(336.5, 232.0).lt(337.8, 232.9).lt(338.9, 231.9).lt(340.5, 232.2).lt(341.7, 233.9).lt(342.2, 233.9).lt(342.2, 235.0).lt(343.3, 235.3).lt(344.4, 234.2).lt(345.3, 234.5).lt(346.5, 234.5).lt(346.9, 235.8).lt(349.2, 236.7).lt(349.9, 236.3).lt(350.8, 234.3).lt(351.3, 234.3).lt(351.9, 235.3).lt(353.9, 235.7).lt(355.7, 236.3).lt(357.1, 236.8).lt(358.0, 236.3).lt(358.3, 235.1).lt(360.4, 235.1).lt(361.4, 235.6).lt(362.7, 234.5).lt(363.3, 234.5).lt(363.6, 235.3).lt(365.6, 235.3).lt(366.4, 234.3).lt(367.3, 234.5).lt(368.3, 235.8).lt(369.8, 236.7).lt(371.4, 237.1).lt(372.7, 237.9).lt(372.6, 219.3).lt(371.9, 214.0).lt(371.9, 210.0).lt(371.1, 206.7).lt(370.9, 203.3).lt(370.8, 201.2).lt(364.4, 201.6).lt(342.0, 201.3).lt(320.2, 200.3).lt(308.4, 199.7).ef().es();
    addShape(s, map[35]);

    // states/OR
    s.f(fColor).s(w).mt(195.1, 129.0).lt(197.3, 120.3).lt(199.4, 111.7).lt(200.0, 109.6).lt(201.2, 106.7).lt(200.6, 105.6).lt(199.4, 105.7).lt(199.0, 105.2).lt(199.3, 104.6).lt(199.4, 103.1).lt(201.6, 100.5).lt(202.5, 100.2).lt(203.0, 99.7).lt(203.3, 98.1).lt(203.7, 97.8).lt(205.6, 95.0).lt(207.5, 92.8).lt(207.6, 91.0).lt(205.9, 89.7).lt(205.4, 87.7).lt(198.6, 86.0).lt(191.3, 84.2).lt(183.9, 84.3).lt(183.7, 83.6).lt(181.0, 84.6).lt(178.9, 84.4).lt(177.7, 83.6).lt(177.1, 83.9).lt(174.8, 83.8).lt(174.0, 83.1).lt(171.5, 82.1).lt(171.1, 82.2).lt(169.0, 81.5).lt(168.0, 82.4).lt(165.0, 82.2).lt(162.2, 80.2).lt(162.5, 79.8).lt(162.6, 76.0).lt(161.5, 74.1).lt(159.5, 73.9).lt(159.2, 72.6).lt(158.0, 72.4).lt(155.2, 73.4).lt(154.1, 76.5).lt(152.6, 81.4).lt(151.0, 84.6).lt(148.6, 91.4).lt(145.5, 98.0).lt(141.6, 104.1).lt(140.6, 105.5).lt(140.2, 109.7).lt(139.6, 112.6).lt(140.7, 114.8).lt(144.1, 115.9).lt(149.6, 117.4).lt(153.3, 118.4).lt(159.3, 120.4).lt(165.9, 122.1).lt(172.4, 123.9).es().ef();
    addShape(s, map[36]);

    // states/PA
    s.f(fColor).s(w).mt(525.2, 153.3).lt(525.8, 153.0).lt(526.9, 152.3).lt(527.6, 151.0).lt(528.4, 149.9).lt(529.9, 148.4).lt(529.9, 148.0).lt(528.8, 147.2).lt(527.0, 146.0).lt(526.6, 144.8).lt(525.2, 144.6).lt(525.2, 144.1).lt(524.8, 142.7).lt(525.9, 142.2).lt(525.9, 141.0).lt(525.3, 140.4).lt(525.4, 139.6).lt(526.3, 138.1).lt(526.3, 136.6).lt(527.5, 135.4).lt(526.8, 135.0).lt(525.6, 134.9).lt(524.5, 133.9).lt(523.3, 131.4).lt(521.8, 130.9).lt(520.7, 129.9).lt(511.7, 131.8).lt(490.9, 136.1).lt(486.6, 136.8).lt(486.4, 133.3).lt(483.7, 136.1).lt(483.1, 136.3).lt(481.1, 137.8).lt(482.5, 147.1).lt(483.3, 152.3).lt(485.0, 161.6).lt(487.3, 161.3).lt(493.0, 160.5).lt(511.4, 156.8).lt(518.6, 155.5).lt(522.6, 154.7).lt(523.2, 154.1).lt(524.2, 153.3).lt(525.2, 153.3).lt(525.2, 153.3).es().ef();
    addShape(s, map[37]);

    // states/RI
    s.f(fColor).s(w).mt(549.6, 130.3).lt(549.3, 128.3).lt(548.9, 126.2).lt(548.1, 123.3).lt(550.9, 122.6).lt(551.7, 123.1).lt(553.3, 125.2).lt(554.7, 127.4).lt(553.3, 128.1).lt(552.7, 128.1).lt(552.1, 128.9).lt(551.0, 129.9).lt(549.6, 130.3).ef().es();
    addShape(s, map[38]);

    // states/SC
    s.f(fColor).s(w).mt(495.0, 243.6).lt(494.1, 244.0).lt(492.9, 243.4).lt(492.6, 242.4).lt(491.9, 240.7).lt(490.9, 239.6).lt(489.6, 239.3).lt(488.8, 237.0).lt(487.5, 234.1).lt(485.5, 233.1).lt(484.4, 232.2).lt(483.8, 230.9).lt(482.8, 230.0).lt(481.7, 229.4).lt(480.6, 227.9).lt(479.1, 226.8).lt(476.9, 226.0).lt(476.7, 225.3).lt(475.5, 223.9).lt(475.3, 223.2).lt(473.7, 220.6).lt(472.0, 220.7).lt(470.1, 219.5).lt(469.4, 218.9).lt(469.3, 218.1).lt(469.7, 217.1).lt(470.8, 216.6).lt(470.6, 215.6).lt(473.6, 214.4).lt(478.0, 212.2).lt(481.5, 211.8).lt(489.4, 211.5).lt(490.5, 212.5).lt(491.3, 214.0).lt(493.4, 213.8).lt(499.5, 213.1).lt(500.9, 213.5).lt(507.0, 217.2).lt(511.9, 221.1).lt(509.3, 223.8).lt(508.0, 226.8).lt(507.8, 229.8).lt(507.0, 230.2).lt(506.5, 231.6).lt(505.3, 231.9).lt(504.3, 233.6).lt(503.0, 234.9).lt(501.9, 236.6).lt(501.1, 237.0).lt(499.4, 238.6).lt(498.0, 238.7).lt(498.4, 240.3).lt(496.0, 242.9).lt(495.0, 243.6).ef().es();
    addShape(s, map[39]);

    // states/SD
    s.f(fColor).s(w).mt(355.9, 142.1).lt(355.5, 141.1).lt(354.7, 139.7).lt(355.5, 137.6).lt(356.2, 134.8).lt(354.9, 133.8).lt(354.7, 132.5).lt(355.1, 131.3).lt(356.0, 131.3).lt(356.2, 127.9).lt(356.1, 113.2).lt(355.9, 111.7).lt(353.9, 110.1).lt(353.3, 109.2).lt(353.3, 108.4).lt(354.3, 107.6).lt(355.0, 106.9).lt(355.2, 105.4).lt(327.0, 104.6).lt(299.9, 102.7).lt(299.5, 105.3).lt(298.7, 113.0).lt(298.1, 121.7).lt(297.3, 134.2).lt(304.8, 134.7).lt(314.5, 135.3).lt(323.2, 135.8).lt(334.7, 136.4).lt(339.8, 136.2).lt(340.8, 137.3).lt(343.2, 138.7).lt(343.7, 139.2).lt(345.8, 138.5).lt(347.7, 138.3).lt(349.0, 138.2).lt(349.9, 138.8).lt(352.3, 139.6).lt(353.8, 140.4).lt(354.0, 141.2).lt(354.4, 142.2).lt(355.3, 142.2).lt(355.9, 142.1).ef().es();
    addShape(s, map[40]);

    // states/TN
    s.f(fColor).s(w).mt(464.0, 198.7).lt(438.9, 201.2).lt(431.3, 202.0).lt(429.0, 202.3).lt(427.2, 202.3).lt(427.2, 204.2).lt(423.1, 204.4).lt(419.7, 204.7).lt(414.4, 204.7).lt(414.2, 207.6).lt(413.2, 210.6).lt(412.7, 212.1).lt(412.1, 214.2).lt(411.9, 215.5).lt(410.0, 216.6).lt(410.7, 218.3).lt(410.2, 220.4).lt(409.5, 221.2).lt(413.4, 221.2).lt(425.0, 220.3).lt(427.6, 220.2).lt(431.5, 219.9).lt(445.0, 218.7).lt(449.9, 218.3).lt(454.0, 217.8).lt(458.0, 217.3).lt(460.4, 216.9).lt(460.5, 214.5).lt(461.4, 213.8).lt(462.7, 213.5).lt(463.0, 211.7).lt(465.1, 210.4).lt(466.9, 209.7).lt(469.0, 207.9).lt(471.1, 206.9).lt(471.4, 205.4).lt(473.3, 203.5).lt(473.6, 203.4).bt(473.6, 203.4, 473.6, 204.0, 474.0, 204.0).bt(474.4, 204.0, 474.9, 204.2, 474.9, 204.2).lt(476.0, 202.4).lt(477.0, 202.1).lt(478.1, 202.3).lt(478.9, 200.5).lt(480.3, 199.3).lt(480.5, 198.3).lt(480.6, 196.4).lt(479.5, 196.4).lt(478.3, 197.3).lt(474.5, 197.4).lt(468.7, 198.3).lt(464.0, 198.7).ef().es();
    addShape(s, map[41]);

    // states/TX 
    s.f(fColor).s(w).mt(299.6, 204.9).bt(308.3, 205.3, 316.9, 205.7, 325.6, 206.0).bt(325.3, 210.3, 325.0, 214.6, 324.9, 218.9).bt(324.8, 221.4, 324.4, 224.1, 324.8, 226.6).bt(324.9, 227.9, 328.1, 230.4, 328.6, 228.2).bt(329.3, 229.2, 329.9, 229.6, 330.2, 228.4).bt(331.6, 228.7, 331.9, 229.7, 331.3, 231.0).bt(333.1, 230.8, 337.4, 233.2, 338.3, 232.4).bt(340.5, 230.3, 342.0, 235.0, 343.3, 235.3).bt(343.2, 235.3, 345.3, 234.5, 345.9, 234.5).bt(346.4, 234.5, 347.9, 236.1, 348.9, 236.5).bt(350.4, 237.1, 349.9, 234.6, 350.8, 234.3).bt(350.8, 234.3, 353.5, 235.5, 353.9, 235.7).bt(354.5, 235.9, 356.4, 236.9, 357.1, 236.8).bt(358.8, 236.5, 357.6, 235.1, 359.9, 235.1).bt(362.4, 235.1, 363.0, 234.9, 365.6, 235.3).bt(366.8, 235.5, 366.4, 233.5, 368.0, 235.5).bt(368.7, 236.3, 369.9, 236.7, 371.0, 237.0).bt(371.8, 237.2, 373.5, 238.8, 374.2, 238.5).bt(376.0, 237.6, 376.5, 238.5, 376.7, 240.3).bt(377.0, 245.5, 375.8, 252.2, 378.6, 256.8).bt(379.1, 257.7, 378.8, 259.0, 379.4, 259.8).bt(380.4, 261.1, 381.3, 261.8, 381.4, 263.4).bt(381.5, 264.3, 381.7, 264.9, 381.6, 266.1).bt(381.4, 268.1, 380.3, 268.9, 380.0, 270.6).bt(379.9, 271.2, 380.8, 271.4, 380.6, 272.3).bt(380.4, 272.9, 380.4, 273.4, 380.3, 274.1).bt(380.2, 275.6, 379.9, 276.6, 379.4, 278.0).bt(378.7, 279.9, 380.2, 279.5, 377.5, 280.3).bt(376.0, 280.7, 374.6, 281.4, 373.2, 282.1).bt(369.2, 283.9, 365.9, 288.3, 361.9, 290.8).bt(359.7, 292.1, 357.2, 293.1, 355.0, 294.5).bt(354.0, 295.1, 352.9, 296.0, 351.8, 296.3).bt(349.9, 296.6, 350.1, 298.0, 348.7, 299.2).bt(348.2, 299.6, 345.0, 299.2, 346.8, 300.7).bt(347.8, 301.6, 346.9, 303.1, 346.6, 304.2).bt(345.7, 307.3, 345.0, 309.4, 345.8, 312.5).bt(346.1, 313.7, 347.8, 318.8, 347.4, 319.4).bt(345.9, 321.8, 342.6, 318.7, 340.3, 318.3).bt(335.8, 317.3, 329.6, 315.9, 328.5, 310.6).bt(328.2, 309.1, 326.9, 309.2, 326.6, 308.0).bt(326.3, 307.2, 326.9, 306.4, 326.9, 305.5).bt(326.8, 304.4, 325.8, 305.2, 326.4, 303.1).bt(326.9, 301.3, 324.7, 301.5, 324.0, 300.5).bt(320.4, 295.9, 317.2, 291.7, 316.0, 285.8).bt(315.3, 281.9, 309.6, 277.7, 305.9, 277.4).bt(302.8, 277.1, 301.5, 275.8, 298.6, 277.1).bt(295.5, 278.3, 296.3, 282.0, 293.7, 283.9).bt(292.0, 285.1, 291.3, 284.9, 289.4, 283.8).bt(287.6, 282.7, 286.0, 281.6, 284.2, 280.4).bt(282.3, 279.1, 280.7, 276.8, 279.7, 274.7).bt(278.8, 272.8, 279.6, 270.5, 278.5, 268.4).bt(277.5, 266.5, 277.3, 264.9, 275.2, 264.0).bt(273.1, 263.1, 271.6, 260.7, 270.1, 259.0).bt(269.6, 258.4, 269.7, 257.4, 268.9, 257.1).bt(267.3, 256.3, 267.1, 256.3, 266.5, 254.6).bt(265.7, 252.3, 263.5, 252.8, 263.8, 250.1).bt(270.1, 250.6, 276.4, 251.5, 282.6, 251.8).bt(286.9, 252.0, 291.1, 252.3, 295.3, 252.5).bt(296.3, 252.6, 296.6, 244.1, 296.7, 242.8).bt(297.0, 239.2, 297.8, 205.1, 300.2, 204.9).ef().es();
    addShape(s, map[42]);

    //  states/UT
    s.f(fColor).s(w).mt(249.7, 194.0).lt(237.3, 192.0).lt(224.1, 189.8).lt(207.9, 186.8).lt(208.9, 181.8).lt(210.5, 174.4).lt(212.1, 166.4).lt(213.1, 159.8).lt(214.1, 155.4).lt(215.9, 145.5).lt(217.6, 137.0).lt(218.1, 134.3).lt(224.3, 135.4).lt(230.1, 136.4).lt(235.1, 137.3).lt(239.1, 137.9).lt(241.4, 138.3).lt(240.6, 143.5).lt(239.8, 149.3).lt(243.0, 149.7).lt(251.1, 150.8).lt(255.6, 151.4).lt(254.1, 162.1).lt(252.5, 173.0).lt(250.7, 186.6).lt(250.0, 192.0).lt(249.7, 194.0).ef().es();
    addShape(s, map[43]);

    // states/VT
    s.f(fColor).s(w).mt(535.0, 118.3).lt(534.6, 115.6).lt(533.1, 110.2).lt(532.8, 110.1).lt(531.4, 109.5).lt(531.8, 108.0).lt(531.4, 107.0).lt(530.2, 104.8).lt(530.6, 102.9).lt(530.2, 100.4).lt(529.1, 97.3).lt(528.7, 94.9).lt(541.8, 91.4).lt(542.0, 94.2).lt(542.9, 95.6).lt(542.9, 97.5).lt(541.1, 99.5).lt(539.9, 100.0).lt(539.9, 100.6).lt(540.4, 101.4).lt(540.4, 105.6).lt(540.0, 110.1).lt(539.9, 112.4).lt(540.4, 113.1).lt(540.3, 115.3).lt(540.1, 116.1).lt(540.8, 117.1).lt(537.4, 117.8).lt(535.0, 118.3).ef().es();
    addShape(s, map[44]);

    // states/VA
    s.f(fColor).s(w).mt(476.5, 187.3).bt(477.2, 189.0, 479.1, 191.3, 481.0, 189.5).bt(482.3, 188.3, 482.2, 189.5, 483.7, 189.2).bt(486.0, 188.6, 484.5, 187.7, 486.0, 186.6).bt(486.4, 186.7, 486.8, 186.9, 487.3, 187.0).bt(487.8, 186.7, 488.3, 186.2, 488.8, 185.9).bt(489.6, 185.4, 490.5, 185.9, 490.6, 184.4).bt(490.7, 182.0, 491.7, 180.4, 492.7, 177.8).bt(493.2, 176.4, 493.4, 172.6, 494.7, 172.4).bt(494.9, 172.4, 495.5, 174.1, 496.1, 174.2).bt(498.1, 174.4, 497.2, 172.9, 497.9, 171.5).bt(499.3, 168.4, 503.0, 166.9, 502.8, 161.8).bt(504.6, 162.4, 506.1, 163.3, 507.7, 164.2).bt(507.7, 163.4, 508.1, 162.5, 508.1, 161.7).bt(510.2, 162.1, 509.4, 163.6, 510.2, 164.1).bt(511.3, 164.8, 512.6, 164.6, 513.8, 165.4).bt(513.9, 165.0, 514.1, 164.7, 514.2, 164.4).bt(517.3, 165.8, 510.0, 172.2, 517.7, 172.7).bt(519.2, 172.8, 522.3, 173.6, 523.2, 174.9).bt(523.3, 175.0, 523.4, 177.2, 523.4, 177.5).bt(523.6, 178.6, 523.9, 179.5, 524.1, 180.5).bt(523.6, 180.3, 523.0, 180.2, 522.5, 180.0).bt(523.1, 181.2, 526.3, 183.9, 523.8, 184.9).bt(524.7, 185.1, 525.9, 184.7, 527.0, 184.6).bt(527.7, 184.5, 528.9, 187.3, 529.2, 187.9).bt(518.5, 191.9, 506.4, 193.2, 495.1, 194.9).bt(489.9, 195.7, 484.7, 195.9, 479.5, 196.4).bt(478.5, 196.5, 477.9, 197.3, 476.4, 197.4).bt(475.1, 197.4, 474.0, 197.5, 472.7, 197.7).bt(469.7, 198.2, 466.9, 198.5, 463.9, 198.8).bt(469.0, 196.3, 473.0, 192.0, 476.5, 187.3).lt(476.5, 187.3).ef().es();
    addShape(s, map[45]);

    // states/WA
    s.f(fColor).s(w).mt(172.2, 46.1).bt(178.8, 48.3, 185.8, 49.8, 192.5, 51.7).bt(198.8, 53.5, 205.3, 54.9, 211.7, 56.4).bt(209.1, 66.5, 205.6, 77.1, 205.4, 87.6).bt(201.7, 86.7, 198.0, 85.8, 194.2, 84.9).bt(192.6, 84.5, 191.3, 84.2, 189.7, 84.3).bt(188.6, 84.3, 183.8, 85.0, 183.7, 83.6).bt(181.5, 84.4, 179.9, 85.1, 177.9, 83.7).bt(177.7, 83.6, 175.7, 83.8, 175.3, 83.8).bt(174.5, 83.8, 173.5, 82.9, 172.7, 82.6).bt(171.9, 82.3, 171.3, 82.3, 170.5, 82.0).bt(170.2, 81.9, 169.3, 81.4, 169.0, 81.5).bt(168.6, 81.5, 168.4, 82.4, 167.9, 82.3).bt(165.2, 82.2, 164.4, 81.7, 162.2, 80.2).bt(163.5, 78.7, 162.4, 75.7, 161.6, 74.3).bt(161.1, 73.4, 159.7, 74.5, 159.4, 73.2).bt(159.2, 72.7, 157.8, 71.9, 157.1, 71.7).bt(156.8, 71.6, 156.5, 72.4, 156.1, 72.0).bt(155.8, 71.6, 155.1, 71.0, 155.2, 70.5).bt(155.4, 68.7, 156.3, 70.0, 156.9, 68.7).bt(156.9, 68.5, 157.5, 67.4, 157.4, 67.2).bt(157.2, 66.8, 156.2, 67.0, 156.2, 66.5).bt(156.3, 64.5, 156.5, 64.8, 158.4, 64.5).bt(156.0, 62.2, 156.6, 59.7, 156.6, 56.7).bt(156.6, 56.0, 156.8, 55.1, 156.6, 54.5).bt(156.5, 53.8, 155.7, 53.3, 155.9, 52.6).bt(156.2, 51.4, 156.2, 48.2, 157.6, 48.5).bt(158.7, 48.8, 159.9, 51.0, 160.9, 51.6).bt(162.3, 52.4, 163.6, 53.1, 165.1, 53.4).bt(166.4, 53.7, 167.6, 54.8, 169.0, 54.7).bt(170.5, 54.6, 169.2, 54.3, 169.8, 53.5).bt(170.1, 53.0, 170.9, 52.6, 171.4, 52.3).bt(171.5, 52.7, 171.6, 53.1, 171.7, 53.5).bt(171.8, 54.1, 170.8, 53.6, 170.6, 53.9).bt(170.0, 55.0, 171.2, 55.4, 171.6, 56.2).bt(171.8, 56.6, 172.8, 58.8, 172.9, 57.4).bt(173.0, 56.9, 172.4, 55.7, 172.3, 55.0).bt(172.2, 54.7, 172.7, 54.4, 172.7, 54.0).bt(172.7, 53.7, 172.4, 53.4, 172.4, 53.0).bt(172.4, 52.0, 173.2, 51.3, 173.2, 50.5).bt(173.2, 49.2, 170.3, 46.9, 172.2, 46.1).lt(172.2, 46.1).ef().es();
    addShape(s, map[46]);

    // states/WV
    s.f(fColor).s(w).mt(493.3, 160.5).lt(493.8, 162.9).lt(494.3, 165.7).lt(494.5, 165.5).lt(495.5, 164.3).lt(496.6, 162.8).lt(497.7, 162.8).lt(498.4, 162.1).lt(499.3, 160.8).lt(499.9, 161.1).lt(501.3, 161.0).lt(502.6, 159.9).lt(503.5, 159.2).lt(504.4, 159.0).lt(505.2, 159.6).lt(506.6, 160.3).lt(507.6, 161.1).lt(508.2, 161.8).lt(507.7, 164.2).lt(505.0, 162.7).lt(502.8, 161.8).lt(502.7, 164.4).lt(502.5, 165.4).lt(501.7, 166.8).lt(501.4, 167.6).lt(499.9, 168.7).lt(499.7, 169.8).lt(498.0, 170.0).lt(497.9, 171.5).lt(497.3, 174.2).lt(496.1, 174.2).lt(495.5, 173.8).lt(494.7, 172.4).lt(493.8, 172.5).lt(493.7, 174.6).lt(492.7, 177.8).lt(490.2, 183.1).lt(490.6, 183.7).lt(490.5, 185.1).lt(489.5, 186.0).lt(488.8, 185.9).lt(487.3, 187.0).lt(486.0, 186.6).lt(485.1, 188.8).bt(485.1, 188.8, 483.3, 189.2, 483.0, 189.3).bt(482.7, 189.4, 481.9, 188.7, 481.9, 188.7).lt(480.7, 189.8).lt(479.4, 190.1).lt(478.0, 189.7).lt(477.4, 189.1).lt(476.3, 187.6).lt(474.8, 186.6).lt(473.6, 185.3).lt(472.2, 183.5).lt(471.9, 182.4).lt(470.6, 181.7).lt(470.2, 180.9).lt(470.1, 178.4).lt(471.2, 178.3).lt(472.1, 177.9).lt(472.2, 176.6).lt(473.0, 175.9).lt(473.0, 173.5).lt(473.5, 171.6).lt(474.1, 171.3).lt(474.8, 171.8).lt(475.0, 172.7).lt(475.8, 172.2).lt(476.1, 171.4).lt(475.5, 170.5).lt(475.5, 169.4).lt(476.0, 168.7).lt(477.1, 167.1).lt(477.7, 166.4).lt(478.7, 166.6).lt(479.8, 165.8).lt(481.3, 164.2).lt(482.4, 162.3).lt(482.6, 159.6).lt(482.8, 157.1).lt(482.8, 154.8).lt(482.3, 153.3).lt(482.7, 152.6).lt(483.3, 152.0).lt(485.0, 161.6).lt(487.3, 161.3).lt(493.3, 160.5).ef().es();
    addShape(s, map[47]);

    // states/WI
    s.f(fColor).s(w).mt(423.4, 139.4).bt(423.5, 137.7, 423.3, 136.8, 422.7, 135.3).bt(422.3, 134.1, 422.7, 132.7, 422.1, 131.6).bt(421.7, 130.6, 422.3, 128.8, 422.8, 127.9).bt(423.6, 126.4, 423.1, 125.2, 422.8, 123.6).bt(422.6, 122.5, 423.9, 121.5, 424.0, 120.3).bt(424.1, 119.5, 423.7, 119.3, 423.9, 118.4).bt(424.0, 117.8, 424.0, 117.2, 424.2, 116.6).bt(424.9, 114.3, 427.7, 111.4, 426.8, 109.0).bt(425.4, 109.9, 424.3, 112.4, 423.4, 113.9).bt(422.9, 114.6, 420.9, 117.6, 420.2, 117.5).bt(419.0, 117.2, 421.2, 113.2, 421.8, 112.7).bt(422.2, 112.3, 422.3, 112.2, 422.5, 111.7).bt(423.0, 110.7, 422.4, 111.4, 422.0, 110.7).bt(421.4, 109.7, 421.2, 109.4, 421.0, 108.1).bt(420.9, 107.4, 421.0, 105.6, 420.5, 105.1).bt(420.3, 104.8, 419.3, 104.7, 419.0, 104.6).bt(418.5, 104.4, 418.5, 103.7, 418.1, 103.4).bt(416.5, 102.3, 413.6, 102.8, 411.8, 102.0).bt(410.2, 101.2, 408.3, 100.6, 406.5, 100.3).bt(405.5, 100.2, 403.7, 100.3, 402.9, 99.8).bt(402.1, 99.4, 401.4, 97.9, 400.8, 97.2).bt(400.5, 98.2, 398.6, 96.5, 397.2, 97.2).bt(396.0, 97.9, 397.8, 94.5, 398.3, 94.1).bt(396.3, 91.6, 390.7, 99.2, 388.1, 95.9).bt(387.2, 97.1, 386.9, 97.8, 386.9, 99.3).bt(386.9, 100.5, 387.5, 102.7, 386.3, 103.6).bt(385.0, 104.6, 384.0, 105.1, 383.4, 106.6).bt(383.3, 106.8, 382.6, 108.2, 382.8, 108.3).bt(383.2, 108.5, 384.1, 109.1, 384.2, 109.6).bt(384.6, 111.2, 383.6, 111.9, 383.6, 113.4).bt(383.6, 114.4, 383.3, 117.1, 383.9, 117.7).bt(384.3, 118.1, 384.9, 119.1, 385.5, 119.1).bt(386.3, 119.1, 386.8, 118.8, 387.2, 119.6).bt(387.8, 120.6, 387.8, 120.6, 388.9, 120.8).bt(389.8, 120.9, 390.1, 121.7, 390.6, 122.4).bt(392.4, 125.2, 395.5, 125.0, 396.0, 128.7).bt(396.1, 130.0, 396.1, 131.8, 397.1, 132.5).bt(398.5, 133.5, 396.7, 134.9, 396.8, 136.3).bt(396.9, 137.6, 398.0, 138.7, 399.1, 139.2).bt(399.6, 139.4, 400.6, 139.2, 400.8, 139.7).bt(401.4, 140.8, 401.3, 140.7, 402.5, 140.7).bt(405.7, 140.7, 408.8, 140.5, 411.9, 140.3).bt(415.8, 140.1, 419.6, 139.8, 423.4, 139.4).lt(423.4, 139.4).ef().es();
    addShape(s, map[48]);


    s.f(fColor).s(w).mt(298.7, 112.9).lt(293.1, 112.4).lt(277.6, 110.8).lt(269.8, 109.8).lt(256.1, 107.8).lt(246.4, 106.4).lt(245.8, 111.8).lt(243.9, 123.6).lt(241.4, 138.4).lt(240.6, 143.5).lt(239.8, 149.3).lt(243.0, 149.7).lt(251.1, 150.8).lt(255.4, 151.4).lt(265.4, 152.6).lt(283.4, 154.6).lt(295.2, 155.6).lt(297.3, 134.0).lt(298.1, 121.7).lt(298.7, 112.9).ef().es();
    addShape(s, map[49]);

    // country/Mexico
    s.f(fColor).s(w).mt(117.4, 236.5).bt(117.3, 236.9, 117.1, 238.0, 117.3, 238.4).bt(117.8, 238.3, 119.2, 241.1, 119.1, 241.3).bt(119.0, 241.3, 118.3, 240.9, 118.1, 241.0).bt(120.4, 244.9, 120.9, 248.1, 121.9, 251.7).bt(123.8, 251.7, 130.1, 261.8, 129.4, 261.8).bt(129.4, 262.8, 128.6, 263.1, 127.7, 263.0).bt(128.3, 263.7, 128.8, 264.5, 129.7, 264.5).bt(129.7, 264.8, 125.0, 263.2, 123.9, 263.2).bt(126.8, 265.9, 129.2, 269.6, 132.3, 269.6).bt(132.6, 270.6, 132.9, 270.0, 133.4, 270.0).bt(133.4, 269.6, 133.5, 269.3, 133.6, 269.1).bt(133.6, 272.1, 136.2, 272.8, 137.8, 275.4).bt(138.8, 277.0, 137.9, 279.5, 137.9, 281.3).bt(137.9, 281.8, 139.2, 281.8, 139.2, 282.8).bt(139.3, 282.8, 149.3, 289.5, 147.4, 291.5).bt(146.3, 292.6, 151.2, 292.7, 151.0, 290.2).bt(150.9, 289.3, 147.2, 283.9, 146.6, 284.6).bt(146.5, 284.7, 147.0, 286.4, 146.6, 286.2).bt(144.8, 285.4, 143.1, 278.3, 142.6, 276.6).bt(142.2, 275.5, 139.7, 270.2, 139.7, 270.0).bt(139.7, 270.6, 140.7, 271.4, 140.7, 271.7).bt(140.7, 271.1, 136.7, 266.5, 136.2, 265.1).bt(135.7, 263.5, 132.8, 258.4, 132.8, 258.2).bt(132.7, 255.9, 129.0, 254.1, 128.8, 252.0).bt(128.6, 250.0, 126.9, 246.0, 128.1, 242.7).bt(127.3, 242.6, 127.0, 241.7, 126.6, 240.8).bt(127.2, 241.4, 127.1, 241.2, 127.1, 240.6).bt(127.1, 241.7, 127.8, 242.0, 128.4, 242.0).bt(129.0, 242.0, 127.9, 242.9, 128.1, 242.7).bt(129.1, 242.7, 131.2, 244.6, 131.6, 243.2).bt(131.8, 242.5, 133.7, 245.2, 133.8, 245.2).bt(136.6, 245.8, 135.4, 246.2, 135.4, 248.6).bt(135.4, 253.8, 141.0, 257.1, 141.0, 260.9).bt(141.0, 262.5, 145.8, 264.9, 146.0, 264.7).bt(147.0, 265.6, 145.8, 267.2, 147.1, 268.4).bt(149.4, 270.3, 152.0, 271.4, 153.3, 273.6).bt(153.3, 273.3, 153.0, 274.1, 153.6, 275.1).bt(153.6, 275.2, 152.9, 274.1, 152.9, 274.2).bt(153.5, 274.8, 148.2, 278.7, 154.6, 279.2).bt(154.5, 279.2, 154.4, 278.0, 154.6, 278.3).bt(155.2, 278.8, 156.1, 280.6, 156.9, 280.9).bt(157.1, 280.9, 156.7, 279.9, 157.0, 280.1).bt(158.1, 281.0, 158.6, 285.2, 160.4, 285.2).bt(160.4, 284.8, 160.5, 284.4, 160.6, 284.1).bt(161.0, 283.7, 168.7, 296.2, 169.6, 296.2).bt(170.4, 296.3, 169.2, 293.8, 170.0, 294.2).bt(169.2, 293.8, 171.1, 298.6, 171.1, 298.1).bt(170.4, 298.7, 170.7, 297.4, 170.1, 298.2).bt(170.3, 298.0, 169.9, 296.5, 169.7, 296.5).bt(168.9, 296.5, 171.2, 300.4, 171.2, 300.4).bt(172.9, 303.1, 170.7, 303.1, 170.5, 305.4).bt(173.4, 305.4, 169.3, 306.7, 169.7, 308.2).bt(170.9, 312.0, 174.8, 312.3, 176.9, 315.1).bt(177.0, 315.4, 182.6, 319.5, 182.8, 319.5).bt(183.9, 319.9, 187.1, 321.6, 188.2, 321.0).bt(189.9, 320.2, 190.4, 322.9, 191.7, 323.4).bt(198.1, 325.5, 204.1, 329.1, 210.6, 331.0).bt(213.7, 331.9, 217.0, 333.3, 220.5, 332.4).bt(220.6, 332.3, 227.1, 329.0, 227.1, 329.5).bt(227.2, 329.5, 225.7, 329.0, 225.7, 329.0).bt(226.7, 328.0, 226.7, 329.0, 227.2, 329.3).bt(227.2, 329.3, 227.9, 328.4, 228.2, 328.7).bt(228.6, 329.1, 227.4, 329.6, 227.3, 329.6).bt(228.3, 330.4, 230.9, 329.5, 232.1, 330.6).bt(235.1, 333.1, 238.4, 335.5, 241.5, 338.0).bt(242.1, 337.3, 242.5, 335.0, 241.8, 334.5).bt(241.0, 333.8, 242.7, 331.7, 243.1, 331.0).bt(244.5, 328.1, 247.7, 329.0, 250.7, 328.9).bt(250.1, 328.7, 250.9, 327.3, 250.8, 327.0).bt(249.8, 327.0, 245.7, 323.9, 245.1, 322.7).bt(249.1, 323.5, 245.4, 320.4, 247.0, 319.3).bt(250.1, 319.2, 253.2, 319.0, 256.3, 318.8).bt(257.3, 318.8, 256.1, 318.0, 257.0, 317.6).bt(258.3, 317.2, 261.4, 312.4, 261.6, 312.4).bt(261.9, 312.4, 262.8, 315.4, 263.0, 315.9).bt(262.4, 315.8, 265.7, 309.2, 263.8, 310.0).bt(263.2, 310.2, 264.8, 308.1, 264.8, 308.0).bt(264.9, 307.6, 263.5, 308.4, 263.6, 308.5).bt(263.4, 308.3, 264.5, 304.0, 264.8, 303.7).bt(265.7, 302.7, 267.9, 300.1, 267.0, 298.5).bt(265.4, 296.0, 265.7, 297.5, 263.4, 297.5).bt(259.9, 297.6, 250.2, 297.9, 248.6, 302.1).bt(247.5, 305.0, 249.6, 313.2, 244.2, 313.7).bt(244.3, 314.0, 245.3, 314.3, 245.6, 314.3).bt(244.9, 314.3, 244.9, 314.8, 245.5, 315.0).bt(244.9, 315.3, 241.9, 316.9, 241.9, 316.4).bt(241.8, 315.2, 241.1, 316.3, 240.0, 315.8).bt(239.9, 315.8, 241.6, 314.8, 241.7, 315.0).bt(241.0, 314.3, 239.1, 315.3, 238.6, 315.5).bt(238.5, 315.5, 235.0, 317.3, 235.2, 317.4).bt(234.3, 316.8, 231.3, 317.2, 230.5, 318.7).bt(228.3, 319.3, 227.6, 316.6, 225.7, 316.6).bt(222.6, 316.6, 221.4, 315.4, 219.5, 313.5).bt(217.1, 311.2, 210.6, 303.0, 210.6, 299.0).bt(211.5, 299.1, 212.3, 302.4, 212.5, 302.3).bt(213.6, 302.1, 209.7, 296.8, 209.7, 296.8).bt(209.6, 296.9, 210.3, 296.7, 210.3, 296.8).bt(210.1, 296.2, 209.8, 287.8, 209.5, 288.1).bt(210.1, 287.8, 210.2, 284.2, 209.4, 284.2).bt(211.4, 284.2, 208.7, 285.6, 209.9, 284.4).bt(210.2, 284.4, 210.3, 286.2, 210.4, 286.5).bt(210.2, 286.1, 210.6, 281.6, 210.2, 284.0).bt(210.3, 283.9, 210.5, 282.8, 210.5, 282.7).bt(209.9, 282.6, 210.7, 282.5, 210.3, 282.8).bt(209.9, 283.1, 210.5, 281.8, 210.5, 282.0).bt(210.5, 281.7, 209.8, 282.1, 209.8, 282.0).bt(210.0, 281.7, 210.2, 280.5, 209.9, 281.0).bt(209.8, 281.0, 210.8, 280.5, 210.4, 280.5).bt(210.2, 280.4, 210.0, 280.2, 209.8, 280.3).bt(210.3, 279.4, 211.2, 280.6, 211.1, 279.7).bt(211.2, 280.2, 210.7, 282.0, 210.7, 283.0).bt(211.8, 281.9, 213.0, 277.5, 213.0, 276.1).bt(210.4, 276.4, 208.4, 276.2, 206.1, 275.1).bt(204.9, 274.6, 201.9, 272.4, 201.6, 272.4).bt(202.4, 272.5, 197.2, 263.9, 196.9, 263.1).bt(196.5, 261.6, 193.8, 259.4, 193.7, 258.0).bt(193.4, 257.5, 191.7, 257.8, 191.6, 257.6).bt(191.6, 257.6, 191.9, 256.3, 191.7, 256.3).bt(191.8, 256.3, 192.3, 257.6, 192.6, 257.1).bt(188.3, 252.4, 185.1, 257.2, 183.3, 260.0).bt(182.5, 261.3, 176.2, 256.1, 176.0, 255.1).bt(175.5, 252.2, 173.7, 249.1, 170.6, 247.8).bt(169.1, 247.2, 168.8, 244.3, 166.7, 244.3).bt(164.3, 244.2, 161.9, 244.1, 159.5, 244.0).bt(158.5, 243.9, 159.7, 246.6, 156.7, 246.4).bt(154.7, 246.3, 152.7, 246.2, 150.7, 246.1).bt(146.4, 245.9, 144.4, 245.4, 140.6, 243.5).bt(137.2, 241.9, 131.9, 238.0, 128.2, 237.8).bt(128.5, 237.8, 128.6, 236.9, 128.6, 236.5).bt(124.8, 236.5, 121.1, 236.5, 117.4, 236.5).lt(117.4, 236.5).bt(117.4, 236.6, 117.4, 236.5, 117.4, 236.5).ef().es();
    addShape(s, map[50]);


    var mexico = new createjs.Text("Mexico", "Arial 10pt", "white");
    mexico.x = 166.9;
    mexico.y = 274.3;
    stage.addChild(mexico);

    stage.update();

    var l = new createjs.Graphics();

    l.s("black").mt(542, 131).lt(606, 156) //CT
        .mt(551, 127).lt(573, 133) //RI
        .mt(532, 153).lt(574, 163) //NJ
        .mt(536, 105).lt(469, 66) //VT
        .mt(545, 102).lt(525, 60) //NH
        .mt(485, 180).lt(559, 234) //WV
        .mt(546, 121).lt(493, 92) //MA
        .mt(528, 175).lt(626, 214) //MD
        .mt(528, 165).lt(636, 186) //MD
        .mt(526, 186).lt(615, 243); //MD
    var lines = new createjs.Shape(l);
    stage.addChild(lines);

    function createBox(ob, index) {
        // console.log(ob);
        var containerBox = new createjs.Container();

        var b = new createjs.Graphics();
        b.f('#ef8800').s('black').drawRect(0, 0, 30, 13.5).es().ef();
        var boxOver = new createjs.Shape(b);
        containerBox.addChild(boxOver);

        var b2 = new createjs.Graphics();
        b2.f(w).s('black').drawRect(0, 0, 30, 13.5).es().ef();
        var buttonUp = new createjs.Shape(b2);
        containerBox.addChild(buttonUp);
        containerBox.name = ob.name;
        containerBox.abr = ob.abr;

        stage.addChild(containerBox);
        containerBox.x = ob.box.x;
        containerBox.y = ob.box.y;

        var color = "black";
        var text = new createjs.Text(ob.abr, "Arial 10pt", color);
        text.x = ob.txt.x;
        text.y = ob.txt.y;
        stage.addChild(text);

        listener(containerBox, 'mouseover', function() {

            setCursor('pointer');
            buttonUp.alpha = 0.01;


            try {

                stateShapes[index].alpha = 0.01;


            } catch (e) {


            }

            stage.update();
            setLabel(ob.name);

        });

        listener(containerBox, 'mouseout', function() {

            setCursor('default');
            buttonUp.alpha = 1;
            stage.update();
            try {

                stateShapes[index].alpha = 1;
                stage.update();

            } catch (e) {


            }
            setLabel(defText);

        });

        listener(containerBox, 'click', function() {

            setCursor('default');
            buttonUp.alpha = 1;

            var link = (!ob.type) ? url : urlCountry;
            // console.log(link+containerBox.abr);

            if (ev == 'touchstart') {

                var conf = confirm("Find hotels in " + containerBox.name + "?");

                if (conf) {

                    window.open(link + containerBox.abr);

                }

            } else {

                window.open(link + containerBox.abr);

            }

        });

    }

    //create box loop
    for (var i = 0; i < map.length; i++) {

        if (map[i].box) {

            createBox(map[i], i);

        }

    }

    //DC 
    createBox({
        name: "District of Columbia",
        abr: 'DC',
        txt: {
            x: 606.313,
            y: 234.59
        },
        box: {
            x: 600.313,
            y: 234.59,
            n: 0
        }
    }, null);

    stage.update();

    

}); //end DOMContentLoaded

}, false);